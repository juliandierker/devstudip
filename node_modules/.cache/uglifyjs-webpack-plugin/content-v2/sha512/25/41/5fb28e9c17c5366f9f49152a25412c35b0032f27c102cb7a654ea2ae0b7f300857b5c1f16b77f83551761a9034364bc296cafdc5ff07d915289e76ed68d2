{"map":"{\"version\":3,\"sources\":[\"/home/juliandierker/stud-dev/trunk/trunk/node_modules/cropperjs/dist/cropper.js\"],\"names\":[\"module\",\"exports\",\"IN_BROWSER\",\"window\",\"WINDOW\",\"CLASS_HIDDEN\",\"NAMESPACE\",\"EVENT_POINTER_DOWN\",\"PointerEvent\",\"EVENT_POINTER_MOVE\",\"EVENT_POINTER_UP\",\"REGEXP_ACTIONS\",\"REGEXP_DATA_URL\",\"REGEXP_DATA_URL_JPEG\",\"REGEXP_TAG_NAME\",\"DEFAULTS\",\"viewMode\",\"dragMode\",\"initialAspectRatio\",\"NaN\",\"aspectRatio\",\"data\",\"preview\",\"responsive\",\"restore\",\"checkCrossOrigin\",\"checkOrientation\",\"modal\",\"guides\",\"center\",\"highlight\",\"background\",\"autoCrop\",\"autoCropArea\",\"movable\",\"rotatable\",\"scalable\",\"zoomable\",\"zoomOnTouch\",\"zoomOnWheel\",\"wheelZoomRatio\",\"cropBoxMovable\",\"cropBoxResizable\",\"toggleDragModeOnDblclick\",\"minCanvasWidth\",\"minCanvasHeight\",\"minCropBoxWidth\",\"minCropBoxHeight\",\"minContainerWidth\",\"minContainerHeight\",\"ready\",\"cropstart\",\"cropmove\",\"cropend\",\"crop\",\"zoom\",\"_typeof\",\"Symbol\",\"iterator\",\"obj\",\"constructor\",\"prototype\",\"classCallCheck\",\"instance\",\"Constructor\",\"TypeError\",\"createClass\",\"defineProperties\",\"target\",\"props\",\"i\",\"length\",\"descriptor\",\"enumerable\",\"configurable\",\"writable\",\"Object\",\"defineProperty\",\"key\",\"protoProps\",\"staticProps\",\"toConsumableArray\",\"arr\",\"Array\",\"isArray\",\"arr2\",\"from\",\"isNaN\",\"Number\",\"isNumber\",\"value\",\"isUndefined\",\"isObject\",\"hasOwnProperty\",\"isPlainObject\",\"_constructor\",\"call\",\"e\",\"isFunction\",\"forEach\",\"callback\",\"keys\",\"assign\",\"_len\",\"arguments\",\"args\",\"_key\",\"arg\",\"REGEXP_DECIMALS\",\"normalizeDecimalNumber\",\"times\",\"undefined\",\"test\",\"Math\",\"round\",\"REGEXP_SUFFIX\",\"setStyle\",\"element\",\"styles\",\"style\",\"property\",\"addClass\",\"elem\",\"classList\",\"add\",\"className\",\"trim\",\"indexOf\",\"removeClass\",\"remove\",\"replace\",\"toggleClass\",\"added\",\"REGEXP_HYPHENATE\",\"hyphenate\",\"toLowerCase\",\"getData\",\"name\",\"dataset\",\"getAttribute\",\"setData\",\"setAttribute\",\"removeData\",\"removeAttribute\",\"REGEXP_SPACES\",\"onceSupported\",\"supported\",\"once\",\"listener\",\"options\",\"get\",\"set\",\"addEventListener\",\"removeEventListener\",\"removeListener\",\"type\",\"handler\",\"split\",\"event\",\"listeners\",\"addListener\",\"_handler\",\"_element$listeners\",\"_len2\",\"_key2\",\"apply\",\"dispatchEvent\",\"Event\",\"CustomEvent\",\"detail\",\"bubbles\",\"cancelable\",\"document\",\"createEvent\",\"initCustomEvent\",\"getOffset\",\"box\",\"getBoundingClientRect\",\"left\",\"pageXOffset\",\"documentElement\",\"clientLeft\",\"top\",\"pageYOffset\",\"clientTop\",\"location\",\"REGEXP_ORIGINS\",\"isCrossOriginURL\",\"url\",\"parts\",\"match\",\"protocol\",\"hostname\",\"port\",\"addTimestamp\",\"timestamp\",\"Date\",\"getTime\",\"getTransforms\",\"_ref\",\"rotate\",\"scaleX\",\"scaleY\",\"translateX\",\"translateY\",\"values\",\"push\",\"transform\",\"join\",\"WebkitTransform\",\"msTransform\",\"getPointer\",\"_ref2\",\"endOnly\",\"pageX\",\"pageY\",\"end\",\"endX\",\"endY\",\"startX\",\"startY\",\"isFinite\",\"getAdjustedSizes\",\"_ref4\",\"height\",\"width\",\"isValidNumber\",\"adjustedWidth\",\"fromCharCode\",\"String\",\"REGEXP_DATA_URL_HEAD\",\"getOrientation\",\"arrayBuffer\",\"dataView\",\"DataView\",\"orientation\",\"littleEndian\",\"app1Start\",\"ifdStart\",\"getUint8\",\"byteLength\",\"offset\",\"exifIDCode\",\"tiffOffset\",\"start\",\"str\",\"getStringFromCharCode\",\"endianness\",\"getUint16\",\"firstIFDOffset\",\"getUint32\",\"_length\",\"_offset\",\"setUint16\",\"render\",\"this\",\"initContainer\",\"initCanvas\",\"initCropBox\",\"renderCanvas\",\"cropped\",\"renderCropBox\",\"container\",\"cropper\",\"containerData\",\"max\",\"offsetWidth\",\"offsetHeight\",\"imageData\",\"rotated\",\"abs\",\"naturalWidth\",\"naturalHeight\",\"canvasWidth\",\"canvasHeight\",\"canvasData\",\"oldLeft\",\"oldTop\",\"limited\",\"limitCanvas\",\"initialImageData\",\"initialCanvasData\",\"sizeLimited\",\"positionLimited\",\"cropBoxData\",\"_getAdjustedSizes\",\"minWidth\",\"minHeight\",\"maxWidth\",\"Infinity\",\"maxHeight\",\"newCanvasLeft\",\"newCanvasTop\",\"minLeft\",\"min\",\"minTop\",\"maxLeft\",\"maxTop\",\"changed\",\"transformed\",\"_getRotatedSizes\",\"_ref5\",\"degree\",\"arc\",\"PI\",\"sinArc\",\"sin\",\"cosArc\",\"cos\",\"newWidth\",\"newHeight\",\"getRotatedSizes\",\"canvas\",\"renderImage\",\"limitCropBox\",\"image\",\"output\",\"initialCropBoxData\",\"maxCropBoxWidth\",\"maxCropBoxHeight\",\"face\",\"cropBox\",\"disabled\",\"initPreview\",\"crossOrigin\",\"crossOriginUrl\",\"createElement\",\"src\",\"viewBox\",\"appendChild\",\"viewBoxImage\",\"previews\",\"ownerDocument\",\"querySelectorAll\",\"querySelector\",\"el\",\"img\",\"html\",\"innerHTML\",\"cssText\",\"resetPreview\",\"cropBoxWidth\",\"cropBoxHeight\",\"originalWidth\",\"originalHeight\",\"ratio\",\"getElementsByTagName\",\"events\",\"bind\",\"onCropStart\",\"cropStart\",\"onWheel\",\"wheel\",\"onDblclick\",\"dblclick\",\"onCropMove\",\"cropMove\",\"onCropEnd\",\"cropEnd\",\"onResize\",\"resize\",\"unbind\",\"handlers\",\"getCanvasData\",\"getCropBoxData\",\"setCanvasData\",\"n\",\"setCropBoxData\",\"setDragMode\",\"dragBox\",\"contains\",\"_this\",\"delta\",\"preventDefault\",\"wheeling\",\"setTimeout\",\"deltaY\",\"wheelDelta\",\"pointers\",\"action\",\"changedTouches\",\"touch\",\"identifier\",\"pointerId\",\"originalEvent\",\"cropping\",\"change\",\"right\",\"bottom\",\"renderable\",\"shiftKey\",\"pointer\",\"range\",\"x\",\"y\",\"check\",\"side\",\"move\",\"pointers2\",\"ratios\",\"pointer2\",\"x1\",\"y1\",\"x2\",\"y2\",\"z1\",\"sqrt\",\"sort\",\"a\",\"b\",\"getMaxZoomRatio\",\"p\",\"methods\",\"reset\",\"clear\",\"hasSameSize\",\"isImg\",\"replaced\",\"uncreate\",\"load\",\"enable\",\"disable\",\"destroy\",\"originalUrl\",\"offsetX\",\"offsetY\",\"_canvasData\",\"moveTo\",\"_originalEvent\",\"zoomTo\",\"pivot\",\"oldRatio\",\"count\",\"_ref3\",\"getPointersCenter\",\"rotateTo\",\"_scaleX\",\"scale\",\"_scaleY\",\"rounded\",\"getContainerData\",\"getImageData\",\"sized\",\"widthChanged\",\"heightChanged\",\"getCroppedCanvas\",\"HTMLCanvasElement\",\"source\",\"_ref6\",\"_ref7\",\"_ref8\",\"imageAspectRatio\",\"imageNaturalWidth\",\"imageNaturalHeight\",\"_ref6$rotate\",\"_ref6$scaleX\",\"_ref6$scaleY\",\"_ref8$fillColor\",\"fillColor\",\"_ref8$imageSmoothingE\",\"imageSmoothingEnabled\",\"_ref8$imageSmoothingQ\",\"imageSmoothingQuality\",\"_ref8$maxWidth\",\"_ref8$maxHeight\",\"_ref8$minWidth\",\"_ref8$minHeight\",\"context\",\"getContext\",\"maxSizes\",\"minSizes\",\"destMaxSizes\",\"destMinSizes\",\"destWidth\",\"destHeight\",\"params\",\"fillStyle\",\"fillRect\",\"save\",\"translate\",\"drawImage\",\"concat\",\"map\",\"param\",\"floor\",\"getSourceCanvas\",\"_getData\",\"initialX\",\"initialY\",\"initialWidth\",\"initialHeight\",\"_options$imageSmoothi\",\"sourceWidth\",\"sourceHeight\",\"srcX\",\"srcY\",\"srcWidth\",\"srcHeight\",\"dstX\",\"dstY\",\"dstWidth\",\"dstHeight\",\"setAspectRatio\",\"mode\",\"croppable\",\"AnotherCropper\",\"Cropper\",\"tagName\",\"Error\",\"reloading\",\"sizing\",\"init\",\"toDataURL\",\"ArrayBuffer\",\"read\",\"base64\",\"binary\",\"atob\",\"uint8\",\"Uint8Array\",\"charCodeAt\",\"clone\",\"xhr\",\"XMLHttpRequest\",\"done\",\"ontimeout\",\"onabort\",\"onerror\",\"onload\",\"response\",\"open\",\"responseType\",\"withCredentials\",\"send\",\"mimeType\",\"btoa\",\"arrayBufferToDataURL\",\"_parseOrientation\",\"parseOrientation\",\"stop\",\"parentNode\",\"insertBefore\",\"nextSibling\",\"_this2\",\"IS_SAFARI\",\"navigator\",\"userAgent\",\"build\",\"sizingImage\",\"body\",\"removeChild\",\"template\",\"getElementsByClassName\",\"unbuild\",\"abort\",\"factory\"],\"mappings\":\"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\",\"sourcesContent\":[\"/*!\\n * Cropper.js v1.4.0\\n * https://fengyuanchen.github.io/cropperjs\\n *\\n * Copyright 2015-present Chen Fengyuan\\n * Released under the MIT license\\n *\\n * Date: 2018-06-01T15:18:18.692Z\\n */\\n\\n(function (global, factory) {\\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\\n  typeof define === 'function' && define.amd ? define(factory) :\\n  (global.Cropper = factory());\\n}(this, (function () { 'use strict';\\n\\n  var IN_BROWSER = typeof window !== 'undefined';\\n  var WINDOW = IN_BROWSER ? window : {};\\n  var NAMESPACE = 'cropper';\\n\\n  // Actions\\n  var ACTION_ALL = 'all';\\n  var ACTION_CROP = 'crop';\\n  var ACTION_MOVE = 'move';\\n  var ACTION_ZOOM = 'zoom';\\n  var ACTION_EAST = 'e';\\n  var ACTION_WEST = 'w';\\n  var ACTION_SOUTH = 's';\\n  var ACTION_NORTH = 'n';\\n  var ACTION_NORTH_EAST = 'ne';\\n  var ACTION_NORTH_WEST = 'nw';\\n  var ACTION_SOUTH_EAST = 'se';\\n  var ACTION_SOUTH_WEST = 'sw';\\n\\n  // Classes\\n  var CLASS_CROP = NAMESPACE + '-crop';\\n  var CLASS_DISABLED = NAMESPACE + '-disabled';\\n  var CLASS_HIDDEN = NAMESPACE + '-hidden';\\n  var CLASS_HIDE = NAMESPACE + '-hide';\\n  var CLASS_INVISIBLE = NAMESPACE + '-invisible';\\n  var CLASS_MODAL = NAMESPACE + '-modal';\\n  var CLASS_MOVE = NAMESPACE + '-move';\\n\\n  // Data keys\\n  var DATA_ACTION = NAMESPACE + 'Action';\\n  var DATA_PREVIEW = NAMESPACE + 'Preview';\\n\\n  // Drag modes\\n  var DRAG_MODE_CROP = 'crop';\\n  var DRAG_MODE_MOVE = 'move';\\n  var DRAG_MODE_NONE = 'none';\\n\\n  // Events\\n  var EVENT_CROP = 'crop';\\n  var EVENT_CROP_END = 'cropend';\\n  var EVENT_CROP_MOVE = 'cropmove';\\n  var EVENT_CROP_START = 'cropstart';\\n  var EVENT_DBLCLICK = 'dblclick';\\n  var EVENT_POINTER_DOWN = WINDOW.PointerEvent ? 'pointerdown' : 'touchstart mousedown';\\n  var EVENT_POINTER_MOVE = WINDOW.PointerEvent ? 'pointermove' : 'touchmove mousemove';\\n  var EVENT_POINTER_UP = WINDOW.PointerEvent ? 'pointerup pointercancel' : 'touchend touchcancel mouseup';\\n  var EVENT_READY = 'ready';\\n  var EVENT_RESIZE = 'resize';\\n  var EVENT_WHEEL = 'wheel mousewheel DOMMouseScroll';\\n  var EVENT_ZOOM = 'zoom';\\n\\n  // RegExps\\n  var REGEXP_ACTIONS = /^(?:e|w|s|n|se|sw|ne|nw|all|crop|move|zoom)$/;\\n  var REGEXP_DATA_URL = /^data:/;\\n  var REGEXP_DATA_URL_JPEG = /^data:image\\\\/jpeg;base64,/;\\n  var REGEXP_TAG_NAME = /^(?:img|canvas)$/i;\\n\\n  var DEFAULTS = {\\n    // Define the view mode of the cropper\\n    viewMode: 0, // 0, 1, 2, 3\\n\\n    // Define the dragging mode of the cropper\\n    dragMode: DRAG_MODE_CROP, // 'crop', 'move' or 'none'\\n\\n    // Define the initial aspect ratio of the crop box\\n    initialAspectRatio: NaN,\\n\\n    // Define the aspect ratio of the crop box\\n    aspectRatio: NaN,\\n\\n    // An object with the previous cropping result data\\n    data: null,\\n\\n    // A selector for adding extra containers to preview\\n    preview: '',\\n\\n    // Re-render the cropper when resize the window\\n    responsive: true,\\n\\n    // Restore the cropped area after resize the window\\n    restore: true,\\n\\n    // Check if the current image is a cross-origin image\\n    checkCrossOrigin: true,\\n\\n    // Check the current image's Exif Orientation information\\n    checkOrientation: true,\\n\\n    // Show the black modal\\n    modal: true,\\n\\n    // Show the dashed lines for guiding\\n    guides: true,\\n\\n    // Show the center indicator for guiding\\n    center: true,\\n\\n    // Show the white modal to highlight the crop box\\n    highlight: true,\\n\\n    // Show the grid background\\n    background: true,\\n\\n    // Enable to crop the image automatically when initialize\\n    autoCrop: true,\\n\\n    // Define the percentage of automatic cropping area when initializes\\n    autoCropArea: 0.8,\\n\\n    // Enable to move the image\\n    movable: true,\\n\\n    // Enable to rotate the image\\n    rotatable: true,\\n\\n    // Enable to scale the image\\n    scalable: true,\\n\\n    // Enable to zoom the image\\n    zoomable: true,\\n\\n    // Enable to zoom the image by dragging touch\\n    zoomOnTouch: true,\\n\\n    // Enable to zoom the image by wheeling mouse\\n    zoomOnWheel: true,\\n\\n    // Define zoom ratio when zoom the image by wheeling mouse\\n    wheelZoomRatio: 0.1,\\n\\n    // Enable to move the crop box\\n    cropBoxMovable: true,\\n\\n    // Enable to resize the crop box\\n    cropBoxResizable: true,\\n\\n    // Toggle drag mode between \\\"crop\\\" and \\\"move\\\" when click twice on the cropper\\n    toggleDragModeOnDblclick: true,\\n\\n    // Size limitation\\n    minCanvasWidth: 0,\\n    minCanvasHeight: 0,\\n    minCropBoxWidth: 0,\\n    minCropBoxHeight: 0,\\n    minContainerWidth: 200,\\n    minContainerHeight: 100,\\n\\n    // Shortcuts of events\\n    ready: null,\\n    cropstart: null,\\n    cropmove: null,\\n    cropend: null,\\n    crop: null,\\n    zoom: null\\n  };\\n\\n  var TEMPLATE = '<div class=\\\"cropper-container\\\" touch-action=\\\"none\\\">' + '<div class=\\\"cropper-wrap-box\\\">' + '<div class=\\\"cropper-canvas\\\"></div>' + '</div>' + '<div class=\\\"cropper-drag-box\\\"></div>' + '<div class=\\\"cropper-crop-box\\\">' + '<span class=\\\"cropper-view-box\\\"></span>' + '<span class=\\\"cropper-dashed dashed-h\\\"></span>' + '<span class=\\\"cropper-dashed dashed-v\\\"></span>' + '<span class=\\\"cropper-center\\\"></span>' + '<span class=\\\"cropper-face\\\"></span>' + '<span class=\\\"cropper-line line-e\\\" data-cropper-action=\\\"e\\\"></span>' + '<span class=\\\"cropper-line line-n\\\" data-cropper-action=\\\"n\\\"></span>' + '<span class=\\\"cropper-line line-w\\\" data-cropper-action=\\\"w\\\"></span>' + '<span class=\\\"cropper-line line-s\\\" data-cropper-action=\\\"s\\\"></span>' + '<span class=\\\"cropper-point point-e\\\" data-cropper-action=\\\"e\\\"></span>' + '<span class=\\\"cropper-point point-n\\\" data-cropper-action=\\\"n\\\"></span>' + '<span class=\\\"cropper-point point-w\\\" data-cropper-action=\\\"w\\\"></span>' + '<span class=\\\"cropper-point point-s\\\" data-cropper-action=\\\"s\\\"></span>' + '<span class=\\\"cropper-point point-ne\\\" data-cropper-action=\\\"ne\\\"></span>' + '<span class=\\\"cropper-point point-nw\\\" data-cropper-action=\\\"nw\\\"></span>' + '<span class=\\\"cropper-point point-sw\\\" data-cropper-action=\\\"sw\\\"></span>' + '<span class=\\\"cropper-point point-se\\\" data-cropper-action=\\\"se\\\"></span>' + '</div>' + '</div>';\\n\\n  var _typeof = typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\" ? function (obj) {\\n    return typeof obj;\\n  } : function (obj) {\\n    return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj;\\n  };\\n\\n  var classCallCheck = function (instance, Constructor) {\\n    if (!(instance instanceof Constructor)) {\\n      throw new TypeError(\\\"Cannot call a class as a function\\\");\\n    }\\n  };\\n\\n  var createClass = function () {\\n    function defineProperties(target, props) {\\n      for (var i = 0; i < props.length; i++) {\\n        var descriptor = props[i];\\n        descriptor.enumerable = descriptor.enumerable || false;\\n        descriptor.configurable = true;\\n        if (\\\"value\\\" in descriptor) descriptor.writable = true;\\n        Object.defineProperty(target, descriptor.key, descriptor);\\n      }\\n    }\\n\\n    return function (Constructor, protoProps, staticProps) {\\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\\n      if (staticProps) defineProperties(Constructor, staticProps);\\n      return Constructor;\\n    };\\n  }();\\n\\n  var toConsumableArray = function (arr) {\\n    if (Array.isArray(arr)) {\\n      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\\n\\n      return arr2;\\n    } else {\\n      return Array.from(arr);\\n    }\\n  };\\n\\n  /**\\n   * Check if the given value is not a number.\\n   */\\n  var isNaN = Number.isNaN || WINDOW.isNaN;\\n\\n  /**\\n   * Check if the given value is a number.\\n   * @param {*} value - The value to check.\\n   * @returns {boolean} Returns `true` if the given value is a number, else `false`.\\n   */\\n  function isNumber(value) {\\n    return typeof value === 'number' && !isNaN(value);\\n  }\\n\\n  /**\\n   * Check if the given value is undefined.\\n   * @param {*} value - The value to check.\\n   * @returns {boolean} Returns `true` if the given value is undefined, else `false`.\\n   */\\n  function isUndefined(value) {\\n    return typeof value === 'undefined';\\n  }\\n\\n  /**\\n   * Check if the given value is an object.\\n   * @param {*} value - The value to check.\\n   * @returns {boolean} Returns `true` if the given value is an object, else `false`.\\n   */\\n  function isObject(value) {\\n    return (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && value !== null;\\n  }\\n\\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\\n\\n  /**\\n   * Check if the given value is a plain object.\\n   * @param {*} value - The value to check.\\n   * @returns {boolean} Returns `true` if the given value is a plain object, else `false`.\\n   */\\n\\n  function isPlainObject(value) {\\n    if (!isObject(value)) {\\n      return false;\\n    }\\n\\n    try {\\n      var _constructor = value.constructor;\\n      var prototype = _constructor.prototype;\\n\\n\\n      return _constructor && prototype && hasOwnProperty.call(prototype, 'isPrototypeOf');\\n    } catch (e) {\\n      return false;\\n    }\\n  }\\n\\n  /**\\n   * Check if the given value is a function.\\n   * @param {*} value - The value to check.\\n   * @returns {boolean} Returns `true` if the given value is a function, else `false`.\\n   */\\n  function isFunction(value) {\\n    return typeof value === 'function';\\n  }\\n\\n  /**\\n   * Iterate the given data.\\n   * @param {*} data - The data to iterate.\\n   * @param {Function} callback - The process function for each element.\\n   * @returns {*} The original data.\\n   */\\n  function forEach(data, callback) {\\n    if (data && isFunction(callback)) {\\n      if (Array.isArray(data) || isNumber(data.length) /* array-like */) {\\n          var length = data.length;\\n\\n          var i = void 0;\\n\\n          for (i = 0; i < length; i += 1) {\\n            if (callback.call(data, data[i], i, data) === false) {\\n              break;\\n            }\\n          }\\n        } else if (isObject(data)) {\\n        Object.keys(data).forEach(function (key) {\\n          callback.call(data, data[key], key, data);\\n        });\\n      }\\n    }\\n\\n    return data;\\n  }\\n\\n  /**\\n   * Extend the given object.\\n   * @param {*} obj - The object to be extended.\\n   * @param {*} args - The rest objects which will be merged to the first object.\\n   * @returns {Object} The extended object.\\n   */\\n  var assign = Object.assign || function assign(obj) {\\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\\n      args[_key - 1] = arguments[_key];\\n    }\\n\\n    if (isObject(obj) && args.length > 0) {\\n      args.forEach(function (arg) {\\n        if (isObject(arg)) {\\n          Object.keys(arg).forEach(function (key) {\\n            obj[key] = arg[key];\\n          });\\n        }\\n      });\\n    }\\n\\n    return obj;\\n  };\\n\\n  var REGEXP_DECIMALS = /\\\\.\\\\d*(?:0|9){12}\\\\d*$/i;\\n\\n  /**\\n   * Normalize decimal number.\\n   * Check out {@link http://0.30000000000000004.com/}\\n   * @param {number} value - The value to normalize.\\n   * @param {number} [times=100000000000] - The times for normalizing.\\n   * @returns {number} Returns the normalized number.\\n   */\\n  function normalizeDecimalNumber(value) {\\n    var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100000000000;\\n\\n    return REGEXP_DECIMALS.test(value) ? Math.round(value * times) / times : value;\\n  }\\n\\n  var REGEXP_SUFFIX = /^(?:width|height|left|top|marginLeft|marginTop)$/;\\n\\n  /**\\n   * Apply styles to the given element.\\n   * @param {Element} element - The target element.\\n   * @param {Object} styles - The styles for applying.\\n   */\\n  function setStyle(element, styles) {\\n    var style = element.style;\\n\\n\\n    forEach(styles, function (value, property) {\\n      if (REGEXP_SUFFIX.test(property) && isNumber(value)) {\\n        value += 'px';\\n      }\\n\\n      style[property] = value;\\n    });\\n  }\\n\\n  /**\\n   * Check if the given element has a special class.\\n   * @param {Element} element - The element to check.\\n   * @param {string} value - The class to search.\\n   * @returns {boolean} Returns `true` if the special class was found.\\n   */\\n  function hasClass(element, value) {\\n    return element.classList ? element.classList.contains(value) : element.className.indexOf(value) > -1;\\n  }\\n\\n  /**\\n   * Add classes to the given element.\\n   * @param {Element} element - The target element.\\n   * @param {string} value - The classes to be added.\\n   */\\n  function addClass(element, value) {\\n    if (!value) {\\n      return;\\n    }\\n\\n    if (isNumber(element.length)) {\\n      forEach(element, function (elem) {\\n        addClass(elem, value);\\n      });\\n      return;\\n    }\\n\\n    if (element.classList) {\\n      element.classList.add(value);\\n      return;\\n    }\\n\\n    var className = element.className.trim();\\n\\n    if (!className) {\\n      element.className = value;\\n    } else if (className.indexOf(value) < 0) {\\n      element.className = className + ' ' + value;\\n    }\\n  }\\n\\n  /**\\n   * Remove classes from the given element.\\n   * @param {Element} element - The target element.\\n   * @param {string} value - The classes to be removed.\\n   */\\n  function removeClass(element, value) {\\n    if (!value) {\\n      return;\\n    }\\n\\n    if (isNumber(element.length)) {\\n      forEach(element, function (elem) {\\n        removeClass(elem, value);\\n      });\\n      return;\\n    }\\n\\n    if (element.classList) {\\n      element.classList.remove(value);\\n      return;\\n    }\\n\\n    if (element.className.indexOf(value) >= 0) {\\n      element.className = element.className.replace(value, '');\\n    }\\n  }\\n\\n  /**\\n   * Add or remove classes from the given element.\\n   * @param {Element} element - The target element.\\n   * @param {string} value - The classes to be toggled.\\n   * @param {boolean} added - Add only.\\n   */\\n  function toggleClass(element, value, added) {\\n    if (!value) {\\n      return;\\n    }\\n\\n    if (isNumber(element.length)) {\\n      forEach(element, function (elem) {\\n        toggleClass(elem, value, added);\\n      });\\n      return;\\n    }\\n\\n    // IE10-11 doesn't support the second parameter of `classList.toggle`\\n    if (added) {\\n      addClass(element, value);\\n    } else {\\n      removeClass(element, value);\\n    }\\n  }\\n\\n  var REGEXP_HYPHENATE = /([a-z\\\\d])([A-Z])/g;\\n\\n  /**\\n   * Transform the given string from camelCase to kebab-case\\n   * @param {string} value - The value to transform.\\n   * @returns {string} The transformed value.\\n   */\\n  function hyphenate(value) {\\n    return value.replace(REGEXP_HYPHENATE, '$1-$2').toLowerCase();\\n  }\\n\\n  /**\\n   * Get data from the given element.\\n   * @param {Element} element - The target element.\\n   * @param {string} name - The data key to get.\\n   * @returns {string} The data value.\\n   */\\n  function getData(element, name) {\\n    if (isObject(element[name])) {\\n      return element[name];\\n    } else if (element.dataset) {\\n      return element.dataset[name];\\n    }\\n\\n    return element.getAttribute('data-' + hyphenate(name));\\n  }\\n\\n  /**\\n   * Set data to the given element.\\n   * @param {Element} element - The target element.\\n   * @param {string} name - The data key to set.\\n   * @param {string} data - The data value.\\n   */\\n  function setData(element, name, data) {\\n    if (isObject(data)) {\\n      element[name] = data;\\n    } else if (element.dataset) {\\n      element.dataset[name] = data;\\n    } else {\\n      element.setAttribute('data-' + hyphenate(name), data);\\n    }\\n  }\\n\\n  /**\\n   * Remove data from the given element.\\n   * @param {Element} element - The target element.\\n   * @param {string} name - The data key to remove.\\n   */\\n  function removeData(element, name) {\\n    if (isObject(element[name])) {\\n      try {\\n        delete element[name];\\n      } catch (e) {\\n        element[name] = undefined;\\n      }\\n    } else if (element.dataset) {\\n      // #128 Safari not allows to delete dataset property\\n      try {\\n        delete element.dataset[name];\\n      } catch (e) {\\n        element.dataset[name] = undefined;\\n      }\\n    } else {\\n      element.removeAttribute('data-' + hyphenate(name));\\n    }\\n  }\\n\\n  var REGEXP_SPACES = /\\\\s\\\\s*/;\\n  var onceSupported = function () {\\n    var supported = false;\\n\\n    if (IN_BROWSER) {\\n      var once = false;\\n      var listener = function listener() {};\\n      var options = Object.defineProperty({}, 'once', {\\n        get: function get$$1() {\\n          supported = true;\\n          return once;\\n        },\\n\\n\\n        /**\\n         * This setter can fix a `TypeError` in strict mode\\n         * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Getter_only}\\n         * @param {boolean} value - The value to set\\n         */\\n        set: function set$$1(value) {\\n          once = value;\\n        }\\n      });\\n\\n      WINDOW.addEventListener('test', listener, options);\\n      WINDOW.removeEventListener('test', listener, options);\\n    }\\n\\n    return supported;\\n  }();\\n\\n  /**\\n   * Remove event listener from the target element.\\n   * @param {Element} element - The event target.\\n   * @param {string} type - The event type(s).\\n   * @param {Function} listener - The event listener.\\n   * @param {Object} options - The event options.\\n   */\\n  function removeListener(element, type, listener) {\\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\\n\\n    var handler = listener;\\n\\n    type.trim().split(REGEXP_SPACES).forEach(function (event) {\\n      if (!onceSupported) {\\n        var listeners = element.listeners;\\n\\n\\n        if (listeners && listeners[event] && listeners[event][listener]) {\\n          handler = listeners[event][listener];\\n          delete listeners[event][listener];\\n\\n          if (Object.keys(listeners[event]).length === 0) {\\n            delete listeners[event];\\n          }\\n\\n          if (Object.keys(listeners).length === 0) {\\n            delete element.listeners;\\n          }\\n        }\\n      }\\n\\n      element.removeEventListener(event, handler, options);\\n    });\\n  }\\n\\n  /**\\n   * Add event listener to the target element.\\n   * @param {Element} element - The event target.\\n   * @param {string} type - The event type(s).\\n   * @param {Function} listener - The event listener.\\n   * @param {Object} options - The event options.\\n   */\\n  function addListener(element, type, listener) {\\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\\n\\n    var _handler = listener;\\n\\n    type.trim().split(REGEXP_SPACES).forEach(function (event) {\\n      if (options.once && !onceSupported) {\\n        var _element$listeners = element.listeners,\\n            listeners = _element$listeners === undefined ? {} : _element$listeners;\\n\\n\\n        _handler = function handler() {\\n          for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\\n            args[_key2] = arguments[_key2];\\n          }\\n\\n          delete listeners[event][listener];\\n          element.removeEventListener(event, _handler, options);\\n          listener.apply(element, args);\\n        };\\n\\n        if (!listeners[event]) {\\n          listeners[event] = {};\\n        }\\n\\n        if (listeners[event][listener]) {\\n          element.removeEventListener(event, listeners[event][listener], options);\\n        }\\n\\n        listeners[event][listener] = _handler;\\n        element.listeners = listeners;\\n      }\\n\\n      element.addEventListener(event, _handler, options);\\n    });\\n  }\\n\\n  /**\\n   * Dispatch event on the target element.\\n   * @param {Element} element - The event target.\\n   * @param {string} type - The event type(s).\\n   * @param {Object} data - The additional event data.\\n   * @returns {boolean} Indicate if the event is default prevented or not.\\n   */\\n  function dispatchEvent(element, type, data) {\\n    var event = void 0;\\n\\n    // Event and CustomEvent on IE9-11 are global objects, not constructors\\n    if (isFunction(Event) && isFunction(CustomEvent)) {\\n      event = new CustomEvent(type, {\\n        detail: data,\\n        bubbles: true,\\n        cancelable: true\\n      });\\n    } else {\\n      event = document.createEvent('CustomEvent');\\n      event.initCustomEvent(type, true, true, data);\\n    }\\n\\n    return element.dispatchEvent(event);\\n  }\\n\\n  /**\\n   * Get the offset base on the document.\\n   * @param {Element} element - The target element.\\n   * @returns {Object} The offset data.\\n   */\\n  function getOffset(element) {\\n    var box = element.getBoundingClientRect();\\n\\n    return {\\n      left: box.left + (window.pageXOffset - document.documentElement.clientLeft),\\n      top: box.top + (window.pageYOffset - document.documentElement.clientTop)\\n    };\\n  }\\n\\n  var location = WINDOW.location;\\n\\n  var REGEXP_ORIGINS = /^(https?:)\\\\/\\\\/([^:/?#]+):?(\\\\d*)/i;\\n\\n  /**\\n   * Check if the given URL is a cross origin URL.\\n   * @param {string} url - The target URL.\\n   * @returns {boolean} Returns `true` if the given URL is a cross origin URL, else `false`.\\n   */\\n  function isCrossOriginURL(url) {\\n    var parts = url.match(REGEXP_ORIGINS);\\n\\n    return parts && (parts[1] !== location.protocol || parts[2] !== location.hostname || parts[3] !== location.port);\\n  }\\n\\n  /**\\n   * Add timestamp to the given URL.\\n   * @param {string} url - The target URL.\\n   * @returns {string} The result URL.\\n   */\\n  function addTimestamp(url) {\\n    var timestamp = 'timestamp=' + new Date().getTime();\\n\\n    return url + (url.indexOf('?') === -1 ? '?' : '&') + timestamp;\\n  }\\n\\n  /**\\n   * Get transforms base on the given object.\\n   * @param {Object} obj - The target object.\\n   * @returns {string} A string contains transform values.\\n   */\\n  function getTransforms(_ref) {\\n    var rotate = _ref.rotate,\\n        scaleX = _ref.scaleX,\\n        scaleY = _ref.scaleY,\\n        translateX = _ref.translateX,\\n        translateY = _ref.translateY;\\n\\n    var values = [];\\n\\n    if (isNumber(translateX) && translateX !== 0) {\\n      values.push('translateX(' + translateX + 'px)');\\n    }\\n\\n    if (isNumber(translateY) && translateY !== 0) {\\n      values.push('translateY(' + translateY + 'px)');\\n    }\\n\\n    // Rotate should come first before scale to match orientation transform\\n    if (isNumber(rotate) && rotate !== 0) {\\n      values.push('rotate(' + rotate + 'deg)');\\n    }\\n\\n    if (isNumber(scaleX) && scaleX !== 1) {\\n      values.push('scaleX(' + scaleX + ')');\\n    }\\n\\n    if (isNumber(scaleY) && scaleY !== 1) {\\n      values.push('scaleY(' + scaleY + ')');\\n    }\\n\\n    var transform = values.length ? values.join(' ') : 'none';\\n\\n    return {\\n      WebkitTransform: transform,\\n      msTransform: transform,\\n      transform: transform\\n    };\\n  }\\n\\n  /**\\n   * Get the max ratio of a group of pointers.\\n   * @param {string} pointers - The target pointers.\\n   * @returns {number} The result ratio.\\n   */\\n  function getMaxZoomRatio(pointers) {\\n    var pointers2 = assign({}, pointers);\\n    var ratios = [];\\n\\n    forEach(pointers, function (pointer, pointerId) {\\n      delete pointers2[pointerId];\\n\\n      forEach(pointers2, function (pointer2) {\\n        var x1 = Math.abs(pointer.startX - pointer2.startX);\\n        var y1 = Math.abs(pointer.startY - pointer2.startY);\\n        var x2 = Math.abs(pointer.endX - pointer2.endX);\\n        var y2 = Math.abs(pointer.endY - pointer2.endY);\\n        var z1 = Math.sqrt(x1 * x1 + y1 * y1);\\n        var z2 = Math.sqrt(x2 * x2 + y2 * y2);\\n        var ratio = (z2 - z1) / z1;\\n\\n        ratios.push(ratio);\\n      });\\n    });\\n\\n    ratios.sort(function (a, b) {\\n      return Math.abs(a) < Math.abs(b);\\n    });\\n\\n    return ratios[0];\\n  }\\n\\n  /**\\n   * Get a pointer from an event object.\\n   * @param {Object} event - The target event object.\\n   * @param {boolean} endOnly - Indicates if only returns the end point coordinate or not.\\n   * @returns {Object} The result pointer contains start and/or end point coordinates.\\n   */\\n  function getPointer(_ref2, endOnly) {\\n    var pageX = _ref2.pageX,\\n        pageY = _ref2.pageY;\\n\\n    var end = {\\n      endX: pageX,\\n      endY: pageY\\n    };\\n\\n    return endOnly ? end : assign({\\n      startX: pageX,\\n      startY: pageY\\n    }, end);\\n  }\\n\\n  /**\\n   * Get the center point coordinate of a group of pointers.\\n   * @param {Object} pointers - The target pointers.\\n   * @returns {Object} The center point coordinate.\\n   */\\n  function getPointersCenter(pointers) {\\n    var pageX = 0;\\n    var pageY = 0;\\n    var count = 0;\\n\\n    forEach(pointers, function (_ref3) {\\n      var startX = _ref3.startX,\\n          startY = _ref3.startY;\\n\\n      pageX += startX;\\n      pageY += startY;\\n      count += 1;\\n    });\\n\\n    pageX /= count;\\n    pageY /= count;\\n\\n    return {\\n      pageX: pageX,\\n      pageY: pageY\\n    };\\n  }\\n\\n  /**\\n   * Check if the given value is a finite number.\\n   */\\n  var isFinite = Number.isFinite || WINDOW.isFinite;\\n\\n  /**\\n   * Get the max sizes in a rectangle under the given aspect ratio.\\n   * @param {Object} data - The original sizes.\\n   * @param {string} [type='contain'] - The adjust type.\\n   * @returns {Object} The result sizes.\\n   */\\n  function getAdjustedSizes(_ref4) // or 'cover'\\n  {\\n    var aspectRatio = _ref4.aspectRatio,\\n        height = _ref4.height,\\n        width = _ref4.width;\\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'contain';\\n\\n    var isValidNumber = function isValidNumber(value) {\\n      return isFinite(value) && value > 0;\\n    };\\n\\n    if (isValidNumber(width) && isValidNumber(height)) {\\n      var adjustedWidth = height * aspectRatio;\\n\\n      if (type === 'contain' && adjustedWidth > width || type === 'cover' && adjustedWidth < width) {\\n        height = width / aspectRatio;\\n      } else {\\n        width = height * aspectRatio;\\n      }\\n    } else if (isValidNumber(width)) {\\n      height = width / aspectRatio;\\n    } else if (isValidNumber(height)) {\\n      width = height * aspectRatio;\\n    }\\n\\n    return {\\n      width: width,\\n      height: height\\n    };\\n  }\\n\\n  /**\\n   * Get the new sizes of a rectangle after rotated.\\n   * @param {Object} data - The original sizes.\\n   * @returns {Object} The result sizes.\\n   */\\n  function getRotatedSizes(_ref5) {\\n    var width = _ref5.width,\\n        height = _ref5.height,\\n        degree = _ref5.degree;\\n\\n    degree = Math.abs(degree) % 180;\\n\\n    if (degree === 90) {\\n      return {\\n        width: height,\\n        height: width\\n      };\\n    }\\n\\n    var arc = degree % 90 * Math.PI / 180;\\n    var sinArc = Math.sin(arc);\\n    var cosArc = Math.cos(arc);\\n    var newWidth = width * cosArc + height * sinArc;\\n    var newHeight = width * sinArc + height * cosArc;\\n\\n    return degree > 90 ? {\\n      width: newHeight,\\n      height: newWidth\\n    } : {\\n      width: newWidth,\\n      height: newHeight\\n    };\\n  }\\n\\n  /**\\n   * Get a canvas which drew the given image.\\n   * @param {HTMLImageElement} image - The image for drawing.\\n   * @param {Object} imageData - The image data.\\n   * @param {Object} canvasData - The canvas data.\\n   * @param {Object} options - The options.\\n   * @returns {HTMLCanvasElement} The result canvas.\\n   */\\n  function getSourceCanvas(image, _ref6, _ref7, _ref8) {\\n    var imageAspectRatio = _ref6.aspectRatio,\\n        imageNaturalWidth = _ref6.naturalWidth,\\n        imageNaturalHeight = _ref6.naturalHeight,\\n        _ref6$rotate = _ref6.rotate,\\n        rotate = _ref6$rotate === undefined ? 0 : _ref6$rotate,\\n        _ref6$scaleX = _ref6.scaleX,\\n        scaleX = _ref6$scaleX === undefined ? 1 : _ref6$scaleX,\\n        _ref6$scaleY = _ref6.scaleY,\\n        scaleY = _ref6$scaleY === undefined ? 1 : _ref6$scaleY;\\n    var aspectRatio = _ref7.aspectRatio,\\n        naturalWidth = _ref7.naturalWidth,\\n        naturalHeight = _ref7.naturalHeight;\\n    var _ref8$fillColor = _ref8.fillColor,\\n        fillColor = _ref8$fillColor === undefined ? 'transparent' : _ref8$fillColor,\\n        _ref8$imageSmoothingE = _ref8.imageSmoothingEnabled,\\n        imageSmoothingEnabled = _ref8$imageSmoothingE === undefined ? true : _ref8$imageSmoothingE,\\n        _ref8$imageSmoothingQ = _ref8.imageSmoothingQuality,\\n        imageSmoothingQuality = _ref8$imageSmoothingQ === undefined ? 'low' : _ref8$imageSmoothingQ,\\n        _ref8$maxWidth = _ref8.maxWidth,\\n        maxWidth = _ref8$maxWidth === undefined ? Infinity : _ref8$maxWidth,\\n        _ref8$maxHeight = _ref8.maxHeight,\\n        maxHeight = _ref8$maxHeight === undefined ? Infinity : _ref8$maxHeight,\\n        _ref8$minWidth = _ref8.minWidth,\\n        minWidth = _ref8$minWidth === undefined ? 0 : _ref8$minWidth,\\n        _ref8$minHeight = _ref8.minHeight,\\n        minHeight = _ref8$minHeight === undefined ? 0 : _ref8$minHeight;\\n\\n    var canvas = document.createElement('canvas');\\n    var context = canvas.getContext('2d');\\n    var maxSizes = getAdjustedSizes({\\n      aspectRatio: aspectRatio,\\n      width: maxWidth,\\n      height: maxHeight\\n    });\\n    var minSizes = getAdjustedSizes({\\n      aspectRatio: aspectRatio,\\n      width: minWidth,\\n      height: minHeight\\n    }, 'cover');\\n    var width = Math.min(maxSizes.width, Math.max(minSizes.width, naturalWidth));\\n    var height = Math.min(maxSizes.height, Math.max(minSizes.height, naturalHeight));\\n\\n    // Note: should always use image's natural sizes for drawing as\\n    // imageData.naturalWidth === canvasData.naturalHeight when rotate % 180 === 90\\n    var destMaxSizes = getAdjustedSizes({\\n      aspectRatio: imageAspectRatio,\\n      width: maxWidth,\\n      height: maxHeight\\n    });\\n    var destMinSizes = getAdjustedSizes({\\n      aspectRatio: imageAspectRatio,\\n      width: minWidth,\\n      height: minHeight\\n    }, 'cover');\\n    var destWidth = Math.min(destMaxSizes.width, Math.max(destMinSizes.width, imageNaturalWidth));\\n    var destHeight = Math.min(destMaxSizes.height, Math.max(destMinSizes.height, imageNaturalHeight));\\n    var params = [-destWidth / 2, -destHeight / 2, destWidth, destHeight];\\n\\n    canvas.width = normalizeDecimalNumber(width);\\n    canvas.height = normalizeDecimalNumber(height);\\n    context.fillStyle = fillColor;\\n    context.fillRect(0, 0, width, height);\\n    context.save();\\n    context.translate(width / 2, height / 2);\\n    context.rotate(rotate * Math.PI / 180);\\n    context.scale(scaleX, scaleY);\\n    context.imageSmoothingEnabled = imageSmoothingEnabled;\\n    context.imageSmoothingQuality = imageSmoothingQuality;\\n    context.drawImage.apply(context, [image].concat(toConsumableArray(params.map(function (param) {\\n      return Math.floor(normalizeDecimalNumber(param));\\n    }))));\\n    context.restore();\\n    return canvas;\\n  }\\n\\n  var fromCharCode = String.fromCharCode;\\n\\n  /**\\n   * Get string from char code in data view.\\n   * @param {DataView} dataView - The data view for read.\\n   * @param {number} start - The start index.\\n   * @param {number} length - The read length.\\n   * @returns {string} The read result.\\n   */\\n\\n  function getStringFromCharCode(dataView, start, length) {\\n    var str = '';\\n    var i = void 0;\\n\\n    length += start;\\n\\n    for (i = start; i < length; i += 1) {\\n      str += fromCharCode(dataView.getUint8(i));\\n    }\\n\\n    return str;\\n  }\\n\\n  var REGEXP_DATA_URL_HEAD = /^data:.*,/;\\n\\n  /**\\n   * Transform Data URL to array buffer.\\n   * @param {string} dataURL - The Data URL to transform.\\n   * @returns {ArrayBuffer} The result array buffer.\\n   */\\n  function dataURLToArrayBuffer(dataURL) {\\n    var base64 = dataURL.replace(REGEXP_DATA_URL_HEAD, '');\\n    var binary = atob(base64);\\n    var arrayBuffer = new ArrayBuffer(binary.length);\\n    var uint8 = new Uint8Array(arrayBuffer);\\n\\n    forEach(uint8, function (value, i) {\\n      uint8[i] = binary.charCodeAt(i);\\n    });\\n\\n    return arrayBuffer;\\n  }\\n\\n  /**\\n   * Transform array buffer to Data URL.\\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\\n   * @param {string} mimeType - The mime type of the Data URL.\\n   * @returns {string} The result Data URL.\\n   */\\n  function arrayBufferToDataURL(arrayBuffer, mimeType) {\\n    var uint8 = new Uint8Array(arrayBuffer);\\n    var data = '';\\n\\n    // TypedArray.prototype.forEach is not supported in some browsers.\\n    forEach(uint8, function (value) {\\n      data += fromCharCode(value);\\n    });\\n\\n    return 'data:' + mimeType + ';base64,' + btoa(data);\\n  }\\n\\n  /**\\n   * Get orientation value from given array buffer.\\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\\n   * @returns {number} The read orientation value.\\n   */\\n  function getOrientation(arrayBuffer) {\\n    var dataView = new DataView(arrayBuffer);\\n    var orientation = void 0;\\n    var littleEndian = void 0;\\n    var app1Start = void 0;\\n    var ifdStart = void 0;\\n\\n    // Only handle JPEG image (start by 0xFFD8)\\n    if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\\n      var length = dataView.byteLength;\\n      var offset = 2;\\n\\n      while (offset < length) {\\n        if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\\n          app1Start = offset;\\n          break;\\n        }\\n\\n        offset += 1;\\n      }\\n    }\\n\\n    if (app1Start) {\\n      var exifIDCode = app1Start + 4;\\n      var tiffOffset = app1Start + 10;\\n\\n      if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\\n        var endianness = dataView.getUint16(tiffOffset);\\n\\n        littleEndian = endianness === 0x4949;\\n\\n        if (littleEndian || endianness === 0x4D4D /* bigEndian */) {\\n            if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\\n              var firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\\n\\n              if (firstIFDOffset >= 0x00000008) {\\n                ifdStart = tiffOffset + firstIFDOffset;\\n              }\\n            }\\n          }\\n      }\\n    }\\n\\n    if (ifdStart) {\\n      var _length = dataView.getUint16(ifdStart, littleEndian);\\n      var _offset = void 0;\\n      var i = void 0;\\n\\n      for (i = 0; i < _length; i += 1) {\\n        _offset = ifdStart + i * 12 + 2;\\n\\n        if (dataView.getUint16(_offset, littleEndian) === 0x0112 /* Orientation */) {\\n            // 8 is the offset of the current tag's value\\n            _offset += 8;\\n\\n            // Get the original orientation value\\n            orientation = dataView.getUint16(_offset, littleEndian);\\n\\n            // Override the orientation with its default value\\n            dataView.setUint16(_offset, 1, littleEndian);\\n            break;\\n          }\\n      }\\n    }\\n\\n    return orientation;\\n  }\\n\\n  /**\\n   * Parse Exif Orientation value.\\n   * @param {number} orientation - The orientation to parse.\\n   * @returns {Object} The parsed result.\\n   */\\n  function parseOrientation(orientation) {\\n    var rotate = 0;\\n    var scaleX = 1;\\n    var scaleY = 1;\\n\\n    switch (orientation) {\\n      // Flip horizontal\\n      case 2:\\n        scaleX = -1;\\n        break;\\n\\n      // Rotate left 180°\\n      case 3:\\n        rotate = -180;\\n        break;\\n\\n      // Flip vertical\\n      case 4:\\n        scaleY = -1;\\n        break;\\n\\n      // Flip vertical and rotate right 90°\\n      case 5:\\n        rotate = 90;\\n        scaleY = -1;\\n        break;\\n\\n      // Rotate right 90°\\n      case 6:\\n        rotate = 90;\\n        break;\\n\\n      // Flip horizontal and rotate right 90°\\n      case 7:\\n        rotate = 90;\\n        scaleX = -1;\\n        break;\\n\\n      // Rotate left 90°\\n      case 8:\\n        rotate = -90;\\n        break;\\n\\n      default:\\n    }\\n\\n    return {\\n      rotate: rotate,\\n      scaleX: scaleX,\\n      scaleY: scaleY\\n    };\\n  }\\n\\n  var render = {\\n    render: function render() {\\n      this.initContainer();\\n      this.initCanvas();\\n      this.initCropBox();\\n      this.renderCanvas();\\n\\n      if (this.cropped) {\\n        this.renderCropBox();\\n      }\\n    },\\n    initContainer: function initContainer() {\\n      var element = this.element,\\n          options = this.options,\\n          container = this.container,\\n          cropper = this.cropper;\\n\\n\\n      addClass(cropper, CLASS_HIDDEN);\\n      removeClass(element, CLASS_HIDDEN);\\n\\n      var containerData = {\\n        width: Math.max(container.offsetWidth, Number(options.minContainerWidth) || 200),\\n        height: Math.max(container.offsetHeight, Number(options.minContainerHeight) || 100)\\n      };\\n\\n      this.containerData = containerData;\\n\\n      setStyle(cropper, {\\n        width: containerData.width,\\n        height: containerData.height\\n      });\\n\\n      addClass(element, CLASS_HIDDEN);\\n      removeClass(cropper, CLASS_HIDDEN);\\n    },\\n\\n\\n    // Canvas (image wrapper)\\n    initCanvas: function initCanvas() {\\n      var containerData = this.containerData,\\n          imageData = this.imageData;\\n      var viewMode = this.options.viewMode;\\n\\n      var rotated = Math.abs(imageData.rotate) % 180 === 90;\\n      var naturalWidth = rotated ? imageData.naturalHeight : imageData.naturalWidth;\\n      var naturalHeight = rotated ? imageData.naturalWidth : imageData.naturalHeight;\\n      var aspectRatio = naturalWidth / naturalHeight;\\n      var canvasWidth = containerData.width;\\n      var canvasHeight = containerData.height;\\n\\n      if (containerData.height * aspectRatio > containerData.width) {\\n        if (viewMode === 3) {\\n          canvasWidth = containerData.height * aspectRatio;\\n        } else {\\n          canvasHeight = containerData.width / aspectRatio;\\n        }\\n      } else if (viewMode === 3) {\\n        canvasHeight = containerData.width / aspectRatio;\\n      } else {\\n        canvasWidth = containerData.height * aspectRatio;\\n      }\\n\\n      var canvasData = {\\n        aspectRatio: aspectRatio,\\n        naturalWidth: naturalWidth,\\n        naturalHeight: naturalHeight,\\n        width: canvasWidth,\\n        height: canvasHeight\\n      };\\n\\n      canvasData.left = (containerData.width - canvasWidth) / 2;\\n      canvasData.top = (containerData.height - canvasHeight) / 2;\\n      canvasData.oldLeft = canvasData.left;\\n      canvasData.oldTop = canvasData.top;\\n\\n      this.canvasData = canvasData;\\n      this.limited = viewMode === 1 || viewMode === 2;\\n      this.limitCanvas(true, true);\\n      this.initialImageData = assign({}, imageData);\\n      this.initialCanvasData = assign({}, canvasData);\\n    },\\n    limitCanvas: function limitCanvas(sizeLimited, positionLimited) {\\n      var options = this.options,\\n          containerData = this.containerData,\\n          canvasData = this.canvasData,\\n          cropBoxData = this.cropBoxData;\\n      var viewMode = options.viewMode;\\n      var aspectRatio = canvasData.aspectRatio;\\n\\n      var cropped = this.cropped && cropBoxData;\\n\\n      if (sizeLimited) {\\n        var minCanvasWidth = Number(options.minCanvasWidth) || 0;\\n        var minCanvasHeight = Number(options.minCanvasHeight) || 0;\\n\\n        if (viewMode > 1) {\\n          minCanvasWidth = Math.max(minCanvasWidth, containerData.width);\\n          minCanvasHeight = Math.max(minCanvasHeight, containerData.height);\\n\\n          if (viewMode === 3) {\\n            if (minCanvasHeight * aspectRatio > minCanvasWidth) {\\n              minCanvasWidth = minCanvasHeight * aspectRatio;\\n            } else {\\n              minCanvasHeight = minCanvasWidth / aspectRatio;\\n            }\\n          }\\n        } else if (viewMode > 0) {\\n          if (minCanvasWidth) {\\n            minCanvasWidth = Math.max(minCanvasWidth, cropped ? cropBoxData.width : 0);\\n          } else if (minCanvasHeight) {\\n            minCanvasHeight = Math.max(minCanvasHeight, cropped ? cropBoxData.height : 0);\\n          } else if (cropped) {\\n            minCanvasWidth = cropBoxData.width;\\n            minCanvasHeight = cropBoxData.height;\\n\\n            if (minCanvasHeight * aspectRatio > minCanvasWidth) {\\n              minCanvasWidth = minCanvasHeight * aspectRatio;\\n            } else {\\n              minCanvasHeight = minCanvasWidth / aspectRatio;\\n            }\\n          }\\n        }\\n\\n        var _getAdjustedSizes = getAdjustedSizes({\\n          aspectRatio: aspectRatio,\\n          width: minCanvasWidth,\\n          height: minCanvasHeight\\n        });\\n\\n        minCanvasWidth = _getAdjustedSizes.width;\\n        minCanvasHeight = _getAdjustedSizes.height;\\n\\n\\n        canvasData.minWidth = minCanvasWidth;\\n        canvasData.minHeight = minCanvasHeight;\\n        canvasData.maxWidth = Infinity;\\n        canvasData.maxHeight = Infinity;\\n      }\\n\\n      if (positionLimited) {\\n        if (viewMode) {\\n          var newCanvasLeft = containerData.width - canvasData.width;\\n          var newCanvasTop = containerData.height - canvasData.height;\\n\\n          canvasData.minLeft = Math.min(0, newCanvasLeft);\\n          canvasData.minTop = Math.min(0, newCanvasTop);\\n          canvasData.maxLeft = Math.max(0, newCanvasLeft);\\n          canvasData.maxTop = Math.max(0, newCanvasTop);\\n\\n          if (cropped && this.limited) {\\n            canvasData.minLeft = Math.min(cropBoxData.left, cropBoxData.left + (cropBoxData.width - canvasData.width));\\n            canvasData.minTop = Math.min(cropBoxData.top, cropBoxData.top + (cropBoxData.height - canvasData.height));\\n            canvasData.maxLeft = cropBoxData.left;\\n            canvasData.maxTop = cropBoxData.top;\\n\\n            if (viewMode === 2) {\\n              if (canvasData.width >= containerData.width) {\\n                canvasData.minLeft = Math.min(0, newCanvasLeft);\\n                canvasData.maxLeft = Math.max(0, newCanvasLeft);\\n              }\\n\\n              if (canvasData.height >= containerData.height) {\\n                canvasData.minTop = Math.min(0, newCanvasTop);\\n                canvasData.maxTop = Math.max(0, newCanvasTop);\\n              }\\n            }\\n          }\\n        } else {\\n          canvasData.minLeft = -canvasData.width;\\n          canvasData.minTop = -canvasData.height;\\n          canvasData.maxLeft = containerData.width;\\n          canvasData.maxTop = containerData.height;\\n        }\\n      }\\n    },\\n    renderCanvas: function renderCanvas(changed, transformed) {\\n      var canvasData = this.canvasData,\\n          imageData = this.imageData;\\n\\n\\n      if (transformed) {\\n        var _getRotatedSizes = getRotatedSizes({\\n          width: imageData.naturalWidth * Math.abs(imageData.scaleX || 1),\\n          height: imageData.naturalHeight * Math.abs(imageData.scaleY || 1),\\n          degree: imageData.rotate || 0\\n        }),\\n            naturalWidth = _getRotatedSizes.width,\\n            naturalHeight = _getRotatedSizes.height;\\n\\n        var width = canvasData.width * (naturalWidth / canvasData.naturalWidth);\\n        var height = canvasData.height * (naturalHeight / canvasData.naturalHeight);\\n\\n        canvasData.left -= (width - canvasData.width) / 2;\\n        canvasData.top -= (height - canvasData.height) / 2;\\n        canvasData.width = width;\\n        canvasData.height = height;\\n        canvasData.aspectRatio = naturalWidth / naturalHeight;\\n        canvasData.naturalWidth = naturalWidth;\\n        canvasData.naturalHeight = naturalHeight;\\n        this.limitCanvas(true, false);\\n      }\\n\\n      if (canvasData.width > canvasData.maxWidth || canvasData.width < canvasData.minWidth) {\\n        canvasData.left = canvasData.oldLeft;\\n      }\\n\\n      if (canvasData.height > canvasData.maxHeight || canvasData.height < canvasData.minHeight) {\\n        canvasData.top = canvasData.oldTop;\\n      }\\n\\n      canvasData.width = Math.min(Math.max(canvasData.width, canvasData.minWidth), canvasData.maxWidth);\\n      canvasData.height = Math.min(Math.max(canvasData.height, canvasData.minHeight), canvasData.maxHeight);\\n\\n      this.limitCanvas(false, true);\\n\\n      canvasData.left = Math.min(Math.max(canvasData.left, canvasData.minLeft), canvasData.maxLeft);\\n      canvasData.top = Math.min(Math.max(canvasData.top, canvasData.minTop), canvasData.maxTop);\\n      canvasData.oldLeft = canvasData.left;\\n      canvasData.oldTop = canvasData.top;\\n\\n      setStyle(this.canvas, assign({\\n        width: canvasData.width,\\n        height: canvasData.height\\n      }, getTransforms({\\n        translateX: canvasData.left,\\n        translateY: canvasData.top\\n      })));\\n\\n      this.renderImage(changed);\\n\\n      if (this.cropped && this.limited) {\\n        this.limitCropBox(true, true);\\n      }\\n    },\\n    renderImage: function renderImage(changed) {\\n      var canvasData = this.canvasData,\\n          imageData = this.imageData;\\n\\n      var width = imageData.naturalWidth * (canvasData.width / canvasData.naturalWidth);\\n      var height = imageData.naturalHeight * (canvasData.height / canvasData.naturalHeight);\\n\\n      assign(imageData, {\\n        width: width,\\n        height: height,\\n        left: (canvasData.width - width) / 2,\\n        top: (canvasData.height - height) / 2\\n      });\\n      setStyle(this.image, assign({\\n        width: imageData.width,\\n        height: imageData.height\\n      }, getTransforms(assign({\\n        translateX: imageData.left,\\n        translateY: imageData.top\\n      }, imageData))));\\n\\n      if (changed) {\\n        this.output();\\n      }\\n    },\\n    initCropBox: function initCropBox() {\\n      var options = this.options,\\n          canvasData = this.canvasData;\\n\\n      var aspectRatio = options.aspectRatio || options.initialAspectRatio;\\n      var autoCropArea = Number(options.autoCropArea) || 0.8;\\n      var cropBoxData = {\\n        width: canvasData.width,\\n        height: canvasData.height\\n      };\\n\\n      if (aspectRatio) {\\n        if (canvasData.height * aspectRatio > canvasData.width) {\\n          cropBoxData.height = cropBoxData.width / aspectRatio;\\n        } else {\\n          cropBoxData.width = cropBoxData.height * aspectRatio;\\n        }\\n      }\\n\\n      this.cropBoxData = cropBoxData;\\n      this.limitCropBox(true, true);\\n\\n      // Initialize auto crop area\\n      cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\\n      cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight);\\n\\n      // The width/height of auto crop area must large than \\\"minWidth/Height\\\"\\n      cropBoxData.width = Math.max(cropBoxData.minWidth, cropBoxData.width * autoCropArea);\\n      cropBoxData.height = Math.max(cropBoxData.minHeight, cropBoxData.height * autoCropArea);\\n      cropBoxData.left = canvasData.left + (canvasData.width - cropBoxData.width) / 2;\\n      cropBoxData.top = canvasData.top + (canvasData.height - cropBoxData.height) / 2;\\n      cropBoxData.oldLeft = cropBoxData.left;\\n      cropBoxData.oldTop = cropBoxData.top;\\n\\n      this.initialCropBoxData = assign({}, cropBoxData);\\n    },\\n    limitCropBox: function limitCropBox(sizeLimited, positionLimited) {\\n      var options = this.options,\\n          containerData = this.containerData,\\n          canvasData = this.canvasData,\\n          cropBoxData = this.cropBoxData,\\n          limited = this.limited;\\n      var aspectRatio = options.aspectRatio;\\n\\n\\n      if (sizeLimited) {\\n        var minCropBoxWidth = Number(options.minCropBoxWidth) || 0;\\n        var minCropBoxHeight = Number(options.minCropBoxHeight) || 0;\\n        var maxCropBoxWidth = Math.min(containerData.width, limited ? canvasData.width : containerData.width);\\n        var maxCropBoxHeight = Math.min(containerData.height, limited ? canvasData.height : containerData.height);\\n\\n        // The min/maxCropBoxWidth/Height must be less than container's width/height\\n        minCropBoxWidth = Math.min(minCropBoxWidth, containerData.width);\\n        minCropBoxHeight = Math.min(minCropBoxHeight, containerData.height);\\n\\n        if (aspectRatio) {\\n          if (minCropBoxWidth && minCropBoxHeight) {\\n            if (minCropBoxHeight * aspectRatio > minCropBoxWidth) {\\n              minCropBoxHeight = minCropBoxWidth / aspectRatio;\\n            } else {\\n              minCropBoxWidth = minCropBoxHeight * aspectRatio;\\n            }\\n          } else if (minCropBoxWidth) {\\n            minCropBoxHeight = minCropBoxWidth / aspectRatio;\\n          } else if (minCropBoxHeight) {\\n            minCropBoxWidth = minCropBoxHeight * aspectRatio;\\n          }\\n\\n          if (maxCropBoxHeight * aspectRatio > maxCropBoxWidth) {\\n            maxCropBoxHeight = maxCropBoxWidth / aspectRatio;\\n          } else {\\n            maxCropBoxWidth = maxCropBoxHeight * aspectRatio;\\n          }\\n        }\\n\\n        // The minWidth/Height must be less than maxWidth/Height\\n        cropBoxData.minWidth = Math.min(minCropBoxWidth, maxCropBoxWidth);\\n        cropBoxData.minHeight = Math.min(minCropBoxHeight, maxCropBoxHeight);\\n        cropBoxData.maxWidth = maxCropBoxWidth;\\n        cropBoxData.maxHeight = maxCropBoxHeight;\\n      }\\n\\n      if (positionLimited) {\\n        if (limited) {\\n          cropBoxData.minLeft = Math.max(0, canvasData.left);\\n          cropBoxData.minTop = Math.max(0, canvasData.top);\\n          cropBoxData.maxLeft = Math.min(containerData.width, canvasData.left + canvasData.width) - cropBoxData.width;\\n          cropBoxData.maxTop = Math.min(containerData.height, canvasData.top + canvasData.height) - cropBoxData.height;\\n        } else {\\n          cropBoxData.minLeft = 0;\\n          cropBoxData.minTop = 0;\\n          cropBoxData.maxLeft = containerData.width - cropBoxData.width;\\n          cropBoxData.maxTop = containerData.height - cropBoxData.height;\\n        }\\n      }\\n    },\\n    renderCropBox: function renderCropBox() {\\n      var options = this.options,\\n          containerData = this.containerData,\\n          cropBoxData = this.cropBoxData;\\n\\n\\n      if (cropBoxData.width > cropBoxData.maxWidth || cropBoxData.width < cropBoxData.minWidth) {\\n        cropBoxData.left = cropBoxData.oldLeft;\\n      }\\n\\n      if (cropBoxData.height > cropBoxData.maxHeight || cropBoxData.height < cropBoxData.minHeight) {\\n        cropBoxData.top = cropBoxData.oldTop;\\n      }\\n\\n      cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\\n      cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight);\\n\\n      this.limitCropBox(false, true);\\n\\n      cropBoxData.left = Math.min(Math.max(cropBoxData.left, cropBoxData.minLeft), cropBoxData.maxLeft);\\n      cropBoxData.top = Math.min(Math.max(cropBoxData.top, cropBoxData.minTop), cropBoxData.maxTop);\\n      cropBoxData.oldLeft = cropBoxData.left;\\n      cropBoxData.oldTop = cropBoxData.top;\\n\\n      if (options.movable && options.cropBoxMovable) {\\n        // Turn to move the canvas when the crop box is equal to the container\\n        setData(this.face, DATA_ACTION, cropBoxData.width >= containerData.width && cropBoxData.height >= containerData.height ? ACTION_MOVE : ACTION_ALL);\\n      }\\n\\n      setStyle(this.cropBox, assign({\\n        width: cropBoxData.width,\\n        height: cropBoxData.height\\n      }, getTransforms({\\n        translateX: cropBoxData.left,\\n        translateY: cropBoxData.top\\n      })));\\n\\n      if (this.cropped && this.limited) {\\n        this.limitCanvas(true, true);\\n      }\\n\\n      if (!this.disabled) {\\n        this.output();\\n      }\\n    },\\n    output: function output() {\\n      this.preview();\\n      dispatchEvent(this.element, EVENT_CROP, this.getData());\\n    }\\n  };\\n\\n  var preview = {\\n    initPreview: function initPreview() {\\n      var crossOrigin = this.crossOrigin;\\n      var preview = this.options.preview;\\n\\n      var url = crossOrigin ? this.crossOriginUrl : this.url;\\n      var image = document.createElement('img');\\n\\n      if (crossOrigin) {\\n        image.crossOrigin = crossOrigin;\\n      }\\n\\n      image.src = url;\\n      this.viewBox.appendChild(image);\\n      this.viewBoxImage = image;\\n\\n      if (!preview) {\\n        return;\\n      }\\n\\n      var previews = preview;\\n\\n      if (typeof preview === 'string') {\\n        previews = this.element.ownerDocument.querySelectorAll(preview);\\n      } else if (preview.querySelector) {\\n        previews = [preview];\\n      }\\n\\n      this.previews = previews;\\n\\n      forEach(previews, function (el) {\\n        var img = document.createElement('img');\\n\\n        // Save the original size for recover\\n        setData(el, DATA_PREVIEW, {\\n          width: el.offsetWidth,\\n          height: el.offsetHeight,\\n          html: el.innerHTML\\n        });\\n\\n        if (crossOrigin) {\\n          img.crossOrigin = crossOrigin;\\n        }\\n\\n        img.src = url;\\n\\n        /**\\n         * Override img element styles\\n         * Add `display:block` to avoid margin top issue\\n         * Add `height:auto` to override `height` attribute on IE8\\n         * (Occur only when margin-top <= -height)\\n         */\\n        img.style.cssText = 'display:block;' + 'width:100%;' + 'height:auto;' + 'min-width:0!important;' + 'min-height:0!important;' + 'max-width:none!important;' + 'max-height:none!important;' + 'image-orientation:0deg!important;\\\"';\\n\\n        el.innerHTML = '';\\n        el.appendChild(img);\\n      });\\n    },\\n    resetPreview: function resetPreview() {\\n      forEach(this.previews, function (element) {\\n        var data = getData(element, DATA_PREVIEW);\\n\\n        setStyle(element, {\\n          width: data.width,\\n          height: data.height\\n        });\\n\\n        element.innerHTML = data.html;\\n        removeData(element, DATA_PREVIEW);\\n      });\\n    },\\n    preview: function preview() {\\n      var imageData = this.imageData,\\n          canvasData = this.canvasData,\\n          cropBoxData = this.cropBoxData;\\n      var cropBoxWidth = cropBoxData.width,\\n          cropBoxHeight = cropBoxData.height;\\n      var width = imageData.width,\\n          height = imageData.height;\\n\\n      var left = cropBoxData.left - canvasData.left - imageData.left;\\n      var top = cropBoxData.top - canvasData.top - imageData.top;\\n\\n      if (!this.cropped || this.disabled) {\\n        return;\\n      }\\n\\n      setStyle(this.viewBoxImage, assign({\\n        width: width,\\n        height: height\\n      }, getTransforms(assign({\\n        translateX: -left,\\n        translateY: -top\\n      }, imageData))));\\n\\n      forEach(this.previews, function (element) {\\n        var data = getData(element, DATA_PREVIEW);\\n        var originalWidth = data.width;\\n        var originalHeight = data.height;\\n        var newWidth = originalWidth;\\n        var newHeight = originalHeight;\\n        var ratio = 1;\\n\\n        if (cropBoxWidth) {\\n          ratio = originalWidth / cropBoxWidth;\\n          newHeight = cropBoxHeight * ratio;\\n        }\\n\\n        if (cropBoxHeight && newHeight > originalHeight) {\\n          ratio = originalHeight / cropBoxHeight;\\n          newWidth = cropBoxWidth * ratio;\\n          newHeight = originalHeight;\\n        }\\n\\n        setStyle(element, {\\n          width: newWidth,\\n          height: newHeight\\n        });\\n\\n        setStyle(element.getElementsByTagName('img')[0], assign({\\n          width: width * ratio,\\n          height: height * ratio\\n        }, getTransforms(assign({\\n          translateX: -left * ratio,\\n          translateY: -top * ratio\\n        }, imageData))));\\n      });\\n    }\\n  };\\n\\n  var events = {\\n    bind: function bind() {\\n      var element = this.element,\\n          options = this.options,\\n          cropper = this.cropper;\\n\\n\\n      if (isFunction(options.cropstart)) {\\n        addListener(element, EVENT_CROP_START, options.cropstart);\\n      }\\n\\n      if (isFunction(options.cropmove)) {\\n        addListener(element, EVENT_CROP_MOVE, options.cropmove);\\n      }\\n\\n      if (isFunction(options.cropend)) {\\n        addListener(element, EVENT_CROP_END, options.cropend);\\n      }\\n\\n      if (isFunction(options.crop)) {\\n        addListener(element, EVENT_CROP, options.crop);\\n      }\\n\\n      if (isFunction(options.zoom)) {\\n        addListener(element, EVENT_ZOOM, options.zoom);\\n      }\\n\\n      addListener(cropper, EVENT_POINTER_DOWN, this.onCropStart = this.cropStart.bind(this));\\n\\n      if (options.zoomable && options.zoomOnWheel) {\\n        addListener(cropper, EVENT_WHEEL, this.onWheel = this.wheel.bind(this));\\n      }\\n\\n      if (options.toggleDragModeOnDblclick) {\\n        addListener(cropper, EVENT_DBLCLICK, this.onDblclick = this.dblclick.bind(this));\\n      }\\n\\n      addListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove = this.cropMove.bind(this));\\n      addListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd = this.cropEnd.bind(this));\\n\\n      if (options.responsive) {\\n        addListener(window, EVENT_RESIZE, this.onResize = this.resize.bind(this));\\n      }\\n    },\\n    unbind: function unbind() {\\n      var element = this.element,\\n          options = this.options,\\n          cropper = this.cropper;\\n\\n\\n      if (isFunction(options.cropstart)) {\\n        removeListener(element, EVENT_CROP_START, options.cropstart);\\n      }\\n\\n      if (isFunction(options.cropmove)) {\\n        removeListener(element, EVENT_CROP_MOVE, options.cropmove);\\n      }\\n\\n      if (isFunction(options.cropend)) {\\n        removeListener(element, EVENT_CROP_END, options.cropend);\\n      }\\n\\n      if (isFunction(options.crop)) {\\n        removeListener(element, EVENT_CROP, options.crop);\\n      }\\n\\n      if (isFunction(options.zoom)) {\\n        removeListener(element, EVENT_ZOOM, options.zoom);\\n      }\\n\\n      removeListener(cropper, EVENT_POINTER_DOWN, this.onCropStart);\\n\\n      if (options.zoomable && options.zoomOnWheel) {\\n        removeListener(cropper, EVENT_WHEEL, this.onWheel);\\n      }\\n\\n      if (options.toggleDragModeOnDblclick) {\\n        removeListener(cropper, EVENT_DBLCLICK, this.onDblclick);\\n      }\\n\\n      removeListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove);\\n      removeListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd);\\n\\n      if (options.responsive) {\\n        removeListener(window, EVENT_RESIZE, this.onResize);\\n      }\\n    }\\n  };\\n\\n  var handlers = {\\n    resize: function resize() {\\n      var options = this.options,\\n          container = this.container,\\n          containerData = this.containerData;\\n\\n      var minContainerWidth = Number(options.minContainerWidth) || 200;\\n      var minContainerHeight = Number(options.minContainerHeight) || 100;\\n\\n      if (this.disabled || containerData.width <= minContainerWidth || containerData.height <= minContainerHeight) {\\n        return;\\n      }\\n\\n      var ratio = container.offsetWidth / containerData.width;\\n\\n      // Resize when width changed or height changed\\n      if (ratio !== 1 || container.offsetHeight !== containerData.height) {\\n        var canvasData = void 0;\\n        var cropBoxData = void 0;\\n\\n        if (options.restore) {\\n          canvasData = this.getCanvasData();\\n          cropBoxData = this.getCropBoxData();\\n        }\\n\\n        this.render();\\n\\n        if (options.restore) {\\n          this.setCanvasData(forEach(canvasData, function (n, i) {\\n            canvasData[i] = n * ratio;\\n          }));\\n          this.setCropBoxData(forEach(cropBoxData, function (n, i) {\\n            cropBoxData[i] = n * ratio;\\n          }));\\n        }\\n      }\\n    },\\n    dblclick: function dblclick() {\\n      if (this.disabled || this.options.dragMode === DRAG_MODE_NONE) {\\n        return;\\n      }\\n\\n      this.setDragMode(hasClass(this.dragBox, CLASS_CROP) ? DRAG_MODE_MOVE : DRAG_MODE_CROP);\\n    },\\n    wheel: function wheel(e) {\\n      var _this = this;\\n\\n      var ratio = Number(this.options.wheelZoomRatio) || 0.1;\\n      var delta = 1;\\n\\n      if (this.disabled) {\\n        return;\\n      }\\n\\n      e.preventDefault();\\n\\n      // Limit wheel speed to prevent zoom too fast (#21)\\n      if (this.wheeling) {\\n        return;\\n      }\\n\\n      this.wheeling = true;\\n\\n      setTimeout(function () {\\n        _this.wheeling = false;\\n      }, 50);\\n\\n      if (e.deltaY) {\\n        delta = e.deltaY > 0 ? 1 : -1;\\n      } else if (e.wheelDelta) {\\n        delta = -e.wheelDelta / 120;\\n      } else if (e.detail) {\\n        delta = e.detail > 0 ? 1 : -1;\\n      }\\n\\n      this.zoom(-delta * ratio, e);\\n    },\\n    cropStart: function cropStart(e) {\\n      if (this.disabled) {\\n        return;\\n      }\\n\\n      var options = this.options,\\n          pointers = this.pointers;\\n\\n      var action = void 0;\\n\\n      if (e.changedTouches) {\\n        // Handle touch event\\n        forEach(e.changedTouches, function (touch) {\\n          pointers[touch.identifier] = getPointer(touch);\\n        });\\n      } else {\\n        // Handle mouse event and pointer event\\n        pointers[e.pointerId || 0] = getPointer(e);\\n      }\\n\\n      if (Object.keys(pointers).length > 1 && options.zoomable && options.zoomOnTouch) {\\n        action = ACTION_ZOOM;\\n      } else {\\n        action = getData(e.target, DATA_ACTION);\\n      }\\n\\n      if (!REGEXP_ACTIONS.test(action)) {\\n        return;\\n      }\\n\\n      if (dispatchEvent(this.element, EVENT_CROP_START, {\\n        originalEvent: e,\\n        action: action\\n      }) === false) {\\n        return;\\n      }\\n\\n      // This line is required for preventing page zooming in iOS browsers\\n      e.preventDefault();\\n\\n      this.action = action;\\n      this.cropping = false;\\n\\n      if (action === ACTION_CROP) {\\n        this.cropping = true;\\n        addClass(this.dragBox, CLASS_MODAL);\\n      }\\n    },\\n    cropMove: function cropMove(e) {\\n      var action = this.action;\\n\\n\\n      if (this.disabled || !action) {\\n        return;\\n      }\\n\\n      var pointers = this.pointers;\\n\\n\\n      e.preventDefault();\\n\\n      if (dispatchEvent(this.element, EVENT_CROP_MOVE, {\\n        originalEvent: e,\\n        action: action\\n      }) === false) {\\n        return;\\n      }\\n\\n      if (e.changedTouches) {\\n        forEach(e.changedTouches, function (touch) {\\n          assign(pointers[touch.identifier], getPointer(touch, true));\\n        });\\n      } else {\\n        assign(pointers[e.pointerId || 0], getPointer(e, true));\\n      }\\n\\n      this.change(e);\\n    },\\n    cropEnd: function cropEnd(e) {\\n      if (this.disabled) {\\n        return;\\n      }\\n\\n      var action = this.action,\\n          pointers = this.pointers;\\n\\n\\n      if (e.changedTouches) {\\n        forEach(e.changedTouches, function (touch) {\\n          delete pointers[touch.identifier];\\n        });\\n      } else {\\n        delete pointers[e.pointerId || 0];\\n      }\\n\\n      if (!action) {\\n        return;\\n      }\\n\\n      e.preventDefault();\\n\\n      if (!Object.keys(pointers).length) {\\n        this.action = '';\\n      }\\n\\n      if (this.cropping) {\\n        this.cropping = false;\\n        toggleClass(this.dragBox, CLASS_MODAL, this.cropped && this.options.modal);\\n      }\\n\\n      dispatchEvent(this.element, EVENT_CROP_END, {\\n        originalEvent: e,\\n        action: action\\n      });\\n    }\\n  };\\n\\n  var change = {\\n    change: function change(e) {\\n      var options = this.options,\\n          canvasData = this.canvasData,\\n          containerData = this.containerData,\\n          cropBoxData = this.cropBoxData,\\n          pointers = this.pointers;\\n      var action = this.action;\\n      var aspectRatio = options.aspectRatio;\\n      var left = cropBoxData.left,\\n          top = cropBoxData.top,\\n          width = cropBoxData.width,\\n          height = cropBoxData.height;\\n\\n      var right = left + width;\\n      var bottom = top + height;\\n      var minLeft = 0;\\n      var minTop = 0;\\n      var maxWidth = containerData.width;\\n      var maxHeight = containerData.height;\\n      var renderable = true;\\n      var offset = void 0;\\n\\n      // Locking aspect ratio in \\\"free mode\\\" by holding shift key\\n      if (!aspectRatio && e.shiftKey) {\\n        aspectRatio = width && height ? width / height : 1;\\n      }\\n\\n      if (this.limited) {\\n        minLeft = cropBoxData.minLeft;\\n        minTop = cropBoxData.minTop;\\n\\n        maxWidth = minLeft + Math.min(containerData.width, canvasData.width, canvasData.left + canvasData.width);\\n        maxHeight = minTop + Math.min(containerData.height, canvasData.height, canvasData.top + canvasData.height);\\n      }\\n\\n      var pointer = pointers[Object.keys(pointers)[0]];\\n      var range = {\\n        x: pointer.endX - pointer.startX,\\n        y: pointer.endY - pointer.startY\\n      };\\n      var check = function check(side) {\\n        switch (side) {\\n          case ACTION_EAST:\\n            if (right + range.x > maxWidth) {\\n              range.x = maxWidth - right;\\n            }\\n\\n            break;\\n\\n          case ACTION_WEST:\\n            if (left + range.x < minLeft) {\\n              range.x = minLeft - left;\\n            }\\n\\n            break;\\n\\n          case ACTION_NORTH:\\n            if (top + range.y < minTop) {\\n              range.y = minTop - top;\\n            }\\n\\n            break;\\n\\n          case ACTION_SOUTH:\\n            if (bottom + range.y > maxHeight) {\\n              range.y = maxHeight - bottom;\\n            }\\n\\n            break;\\n\\n          default:\\n        }\\n      };\\n\\n      switch (action) {\\n        // Move crop box\\n        case ACTION_ALL:\\n          left += range.x;\\n          top += range.y;\\n          break;\\n\\n        // Resize crop box\\n        case ACTION_EAST:\\n          if (range.x >= 0 && (right >= maxWidth || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\\n            renderable = false;\\n            break;\\n          }\\n\\n          check(ACTION_EAST);\\n          width += range.x;\\n\\n          if (width < 0) {\\n            action = ACTION_WEST;\\n            width = -width;\\n            left -= width;\\n          }\\n\\n          if (aspectRatio) {\\n            height = width / aspectRatio;\\n            top += (cropBoxData.height - height) / 2;\\n          }\\n\\n          break;\\n\\n        case ACTION_NORTH:\\n          if (range.y <= 0 && (top <= minTop || aspectRatio && (left <= minLeft || right >= maxWidth))) {\\n            renderable = false;\\n            break;\\n          }\\n\\n          check(ACTION_NORTH);\\n          height -= range.y;\\n          top += range.y;\\n\\n          if (height < 0) {\\n            action = ACTION_SOUTH;\\n            height = -height;\\n            top -= height;\\n          }\\n\\n          if (aspectRatio) {\\n            width = height * aspectRatio;\\n            left += (cropBoxData.width - width) / 2;\\n          }\\n\\n          break;\\n\\n        case ACTION_WEST:\\n          if (range.x <= 0 && (left <= minLeft || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\\n            renderable = false;\\n            break;\\n          }\\n\\n          check(ACTION_WEST);\\n          width -= range.x;\\n          left += range.x;\\n\\n          if (width < 0) {\\n            action = ACTION_EAST;\\n            width = -width;\\n            left -= width;\\n          }\\n\\n          if (aspectRatio) {\\n            height = width / aspectRatio;\\n            top += (cropBoxData.height - height) / 2;\\n          }\\n\\n          break;\\n\\n        case ACTION_SOUTH:\\n          if (range.y >= 0 && (bottom >= maxHeight || aspectRatio && (left <= minLeft || right >= maxWidth))) {\\n            renderable = false;\\n            break;\\n          }\\n\\n          check(ACTION_SOUTH);\\n          height += range.y;\\n\\n          if (height < 0) {\\n            action = ACTION_NORTH;\\n            height = -height;\\n            top -= height;\\n          }\\n\\n          if (aspectRatio) {\\n            width = height * aspectRatio;\\n            left += (cropBoxData.width - width) / 2;\\n          }\\n\\n          break;\\n\\n        case ACTION_NORTH_EAST:\\n          if (aspectRatio) {\\n            if (range.y <= 0 && (top <= minTop || right >= maxWidth)) {\\n              renderable = false;\\n              break;\\n            }\\n\\n            check(ACTION_NORTH);\\n            height -= range.y;\\n            top += range.y;\\n            width = height * aspectRatio;\\n          } else {\\n            check(ACTION_NORTH);\\n            check(ACTION_EAST);\\n\\n            if (range.x >= 0) {\\n              if (right < maxWidth) {\\n                width += range.x;\\n              } else if (range.y <= 0 && top <= minTop) {\\n                renderable = false;\\n              }\\n            } else {\\n              width += range.x;\\n            }\\n\\n            if (range.y <= 0) {\\n              if (top > minTop) {\\n                height -= range.y;\\n                top += range.y;\\n              }\\n            } else {\\n              height -= range.y;\\n              top += range.y;\\n            }\\n          }\\n\\n          if (width < 0 && height < 0) {\\n            action = ACTION_SOUTH_WEST;\\n            height = -height;\\n            width = -width;\\n            top -= height;\\n            left -= width;\\n          } else if (width < 0) {\\n            action = ACTION_NORTH_WEST;\\n            width = -width;\\n            left -= width;\\n          } else if (height < 0) {\\n            action = ACTION_SOUTH_EAST;\\n            height = -height;\\n            top -= height;\\n          }\\n\\n          break;\\n\\n        case ACTION_NORTH_WEST:\\n          if (aspectRatio) {\\n            if (range.y <= 0 && (top <= minTop || left <= minLeft)) {\\n              renderable = false;\\n              break;\\n            }\\n\\n            check(ACTION_NORTH);\\n            height -= range.y;\\n            top += range.y;\\n            width = height * aspectRatio;\\n            left += cropBoxData.width - width;\\n          } else {\\n            check(ACTION_NORTH);\\n            check(ACTION_WEST);\\n\\n            if (range.x <= 0) {\\n              if (left > minLeft) {\\n                width -= range.x;\\n                left += range.x;\\n              } else if (range.y <= 0 && top <= minTop) {\\n                renderable = false;\\n              }\\n            } else {\\n              width -= range.x;\\n              left += range.x;\\n            }\\n\\n            if (range.y <= 0) {\\n              if (top > minTop) {\\n                height -= range.y;\\n                top += range.y;\\n              }\\n            } else {\\n              height -= range.y;\\n              top += range.y;\\n            }\\n          }\\n\\n          if (width < 0 && height < 0) {\\n            action = ACTION_SOUTH_EAST;\\n            height = -height;\\n            width = -width;\\n            top -= height;\\n            left -= width;\\n          } else if (width < 0) {\\n            action = ACTION_NORTH_EAST;\\n            width = -width;\\n            left -= width;\\n          } else if (height < 0) {\\n            action = ACTION_SOUTH_WEST;\\n            height = -height;\\n            top -= height;\\n          }\\n\\n          break;\\n\\n        case ACTION_SOUTH_WEST:\\n          if (aspectRatio) {\\n            if (range.x <= 0 && (left <= minLeft || bottom >= maxHeight)) {\\n              renderable = false;\\n              break;\\n            }\\n\\n            check(ACTION_WEST);\\n            width -= range.x;\\n            left += range.x;\\n            height = width / aspectRatio;\\n          } else {\\n            check(ACTION_SOUTH);\\n            check(ACTION_WEST);\\n\\n            if (range.x <= 0) {\\n              if (left > minLeft) {\\n                width -= range.x;\\n                left += range.x;\\n              } else if (range.y >= 0 && bottom >= maxHeight) {\\n                renderable = false;\\n              }\\n            } else {\\n              width -= range.x;\\n              left += range.x;\\n            }\\n\\n            if (range.y >= 0) {\\n              if (bottom < maxHeight) {\\n                height += range.y;\\n              }\\n            } else {\\n              height += range.y;\\n            }\\n          }\\n\\n          if (width < 0 && height < 0) {\\n            action = ACTION_NORTH_EAST;\\n            height = -height;\\n            width = -width;\\n            top -= height;\\n            left -= width;\\n          } else if (width < 0) {\\n            action = ACTION_SOUTH_EAST;\\n            width = -width;\\n            left -= width;\\n          } else if (height < 0) {\\n            action = ACTION_NORTH_WEST;\\n            height = -height;\\n            top -= height;\\n          }\\n\\n          break;\\n\\n        case ACTION_SOUTH_EAST:\\n          if (aspectRatio) {\\n            if (range.x >= 0 && (right >= maxWidth || bottom >= maxHeight)) {\\n              renderable = false;\\n              break;\\n            }\\n\\n            check(ACTION_EAST);\\n            width += range.x;\\n            height = width / aspectRatio;\\n          } else {\\n            check(ACTION_SOUTH);\\n            check(ACTION_EAST);\\n\\n            if (range.x >= 0) {\\n              if (right < maxWidth) {\\n                width += range.x;\\n              } else if (range.y >= 0 && bottom >= maxHeight) {\\n                renderable = false;\\n              }\\n            } else {\\n              width += range.x;\\n            }\\n\\n            if (range.y >= 0) {\\n              if (bottom < maxHeight) {\\n                height += range.y;\\n              }\\n            } else {\\n              height += range.y;\\n            }\\n          }\\n\\n          if (width < 0 && height < 0) {\\n            action = ACTION_NORTH_WEST;\\n            height = -height;\\n            width = -width;\\n            top -= height;\\n            left -= width;\\n          } else if (width < 0) {\\n            action = ACTION_SOUTH_WEST;\\n            width = -width;\\n            left -= width;\\n          } else if (height < 0) {\\n            action = ACTION_NORTH_EAST;\\n            height = -height;\\n            top -= height;\\n          }\\n\\n          break;\\n\\n        // Move canvas\\n        case ACTION_MOVE:\\n          this.move(range.x, range.y);\\n          renderable = false;\\n          break;\\n\\n        // Zoom canvas\\n        case ACTION_ZOOM:\\n          this.zoom(getMaxZoomRatio(pointers), e);\\n          renderable = false;\\n          break;\\n\\n        // Create crop box\\n        case ACTION_CROP:\\n          if (!range.x || !range.y) {\\n            renderable = false;\\n            break;\\n          }\\n\\n          offset = getOffset(this.cropper);\\n          left = pointer.startX - offset.left;\\n          top = pointer.startY - offset.top;\\n          width = cropBoxData.minWidth;\\n          height = cropBoxData.minHeight;\\n\\n          if (range.x > 0) {\\n            action = range.y > 0 ? ACTION_SOUTH_EAST : ACTION_NORTH_EAST;\\n          } else if (range.x < 0) {\\n            left -= width;\\n            action = range.y > 0 ? ACTION_SOUTH_WEST : ACTION_NORTH_WEST;\\n          }\\n\\n          if (range.y < 0) {\\n            top -= height;\\n          }\\n\\n          // Show the crop box if is hidden\\n          if (!this.cropped) {\\n            removeClass(this.cropBox, CLASS_HIDDEN);\\n            this.cropped = true;\\n\\n            if (this.limited) {\\n              this.limitCropBox(true, true);\\n            }\\n          }\\n\\n          break;\\n\\n        default:\\n      }\\n\\n      if (renderable) {\\n        cropBoxData.width = width;\\n        cropBoxData.height = height;\\n        cropBoxData.left = left;\\n        cropBoxData.top = top;\\n        this.action = action;\\n        this.renderCropBox();\\n      }\\n\\n      // Override\\n      forEach(pointers, function (p) {\\n        p.startX = p.endX;\\n        p.startY = p.endY;\\n      });\\n    }\\n  };\\n\\n  var methods = {\\n    // Show the crop box manually\\n    crop: function crop() {\\n      if (this.ready && !this.cropped && !this.disabled) {\\n        this.cropped = true;\\n        this.limitCropBox(true, true);\\n\\n        if (this.options.modal) {\\n          addClass(this.dragBox, CLASS_MODAL);\\n        }\\n\\n        removeClass(this.cropBox, CLASS_HIDDEN);\\n        this.setCropBoxData(this.initialCropBoxData);\\n      }\\n\\n      return this;\\n    },\\n\\n\\n    // Reset the image and crop box to their initial states\\n    reset: function reset() {\\n      if (this.ready && !this.disabled) {\\n        this.imageData = assign({}, this.initialImageData);\\n        this.canvasData = assign({}, this.initialCanvasData);\\n        this.cropBoxData = assign({}, this.initialCropBoxData);\\n        this.renderCanvas();\\n\\n        if (this.cropped) {\\n          this.renderCropBox();\\n        }\\n      }\\n\\n      return this;\\n    },\\n\\n\\n    // Clear the crop box\\n    clear: function clear() {\\n      if (this.cropped && !this.disabled) {\\n        assign(this.cropBoxData, {\\n          left: 0,\\n          top: 0,\\n          width: 0,\\n          height: 0\\n        });\\n\\n        this.cropped = false;\\n        this.renderCropBox();\\n        this.limitCanvas(true, true);\\n\\n        // Render canvas after crop box rendered\\n        this.renderCanvas();\\n        removeClass(this.dragBox, CLASS_MODAL);\\n        addClass(this.cropBox, CLASS_HIDDEN);\\n      }\\n\\n      return this;\\n    },\\n\\n\\n    /**\\n     * Replace the image's src and rebuild the cropper\\n     * @param {string} url - The new URL.\\n     * @param {boolean} [hasSameSize] - Indicate if the new image has the same size as the old one.\\n     * @returns {Cropper} this\\n     */\\n    replace: function replace(url) {\\n      var hasSameSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\\n\\n      if (!this.disabled && url) {\\n        if (this.isImg) {\\n          this.element.src = url;\\n        }\\n\\n        if (hasSameSize) {\\n          this.url = url;\\n          this.image.src = url;\\n\\n          if (this.ready) {\\n            this.viewBoxImage.src = url;\\n\\n            forEach(this.previews, function (element) {\\n              element.getElementsByTagName('img')[0].src = url;\\n            });\\n          }\\n        } else {\\n          if (this.isImg) {\\n            this.replaced = true;\\n          }\\n\\n          this.options.data = null;\\n          this.uncreate();\\n          this.load(url);\\n        }\\n      }\\n\\n      return this;\\n    },\\n\\n\\n    // Enable (unfreeze) the cropper\\n    enable: function enable() {\\n      if (this.ready && this.disabled) {\\n        this.disabled = false;\\n        removeClass(this.cropper, CLASS_DISABLED);\\n      }\\n\\n      return this;\\n    },\\n\\n\\n    // Disable (freeze) the cropper\\n    disable: function disable() {\\n      if (this.ready && !this.disabled) {\\n        this.disabled = true;\\n        addClass(this.cropper, CLASS_DISABLED);\\n      }\\n\\n      return this;\\n    },\\n\\n\\n    /**\\n     * Destroy the cropper and remove the instance from the image\\n     * @returns {Cropper} this\\n     */\\n    destroy: function destroy() {\\n      var element = this.element;\\n\\n\\n      if (!getData(element, NAMESPACE)) {\\n        return this;\\n      }\\n\\n      if (this.isImg && this.replaced) {\\n        element.src = this.originalUrl;\\n      }\\n\\n      this.uncreate();\\n      removeData(element, NAMESPACE);\\n\\n      return this;\\n    },\\n\\n\\n    /**\\n     * Move the canvas with relative offsets\\n     * @param {number} offsetX - The relative offset distance on the x-axis.\\n     * @param {number} [offsetY=offsetX] - The relative offset distance on the y-axis.\\n     * @returns {Cropper} this\\n     */\\n    move: function move(offsetX) {\\n      var offsetY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : offsetX;\\n      var _canvasData = this.canvasData,\\n          left = _canvasData.left,\\n          top = _canvasData.top;\\n\\n\\n      return this.moveTo(isUndefined(offsetX) ? offsetX : left + Number(offsetX), isUndefined(offsetY) ? offsetY : top + Number(offsetY));\\n    },\\n\\n\\n    /**\\n     * Move the canvas to an absolute point\\n     * @param {number} x - The x-axis coordinate.\\n     * @param {number} [y=x] - The y-axis coordinate.\\n     * @returns {Cropper} this\\n     */\\n    moveTo: function moveTo(x) {\\n      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : x;\\n      var canvasData = this.canvasData;\\n\\n      var changed = false;\\n\\n      x = Number(x);\\n      y = Number(y);\\n\\n      if (this.ready && !this.disabled && this.options.movable) {\\n        if (isNumber(x)) {\\n          canvasData.left = x;\\n          changed = true;\\n        }\\n\\n        if (isNumber(y)) {\\n          canvasData.top = y;\\n          changed = true;\\n        }\\n\\n        if (changed) {\\n          this.renderCanvas(true);\\n        }\\n      }\\n\\n      return this;\\n    },\\n\\n\\n    /**\\n     * Zoom the canvas with a relative ratio\\n     * @param {number} ratio - The target ratio.\\n     * @param {Event} _originalEvent - The original event if any.\\n     * @returns {Cropper} this\\n     */\\n    zoom: function zoom(ratio, _originalEvent) {\\n      var canvasData = this.canvasData;\\n\\n\\n      ratio = Number(ratio);\\n\\n      if (ratio < 0) {\\n        ratio = 1 / (1 - ratio);\\n      } else {\\n        ratio = 1 + ratio;\\n      }\\n\\n      return this.zoomTo(canvasData.width * ratio / canvasData.naturalWidth, null, _originalEvent);\\n    },\\n\\n\\n    /**\\n     * Zoom the canvas to an absolute ratio\\n     * @param {number} ratio - The target ratio.\\n     * @param {Object} pivot - The zoom pivot point coordinate.\\n     * @param {Event} _originalEvent - The original event if any.\\n     * @returns {Cropper} this\\n     */\\n    zoomTo: function zoomTo(ratio, pivot, _originalEvent) {\\n      var options = this.options,\\n          canvasData = this.canvasData;\\n      var width = canvasData.width,\\n          height = canvasData.height,\\n          naturalWidth = canvasData.naturalWidth,\\n          naturalHeight = canvasData.naturalHeight;\\n\\n\\n      ratio = Number(ratio);\\n\\n      if (ratio >= 0 && this.ready && !this.disabled && options.zoomable) {\\n        var newWidth = naturalWidth * ratio;\\n        var newHeight = naturalHeight * ratio;\\n\\n        if (dispatchEvent(this.element, EVENT_ZOOM, {\\n          ratio: ratio,\\n          oldRatio: width / naturalWidth,\\n          originalEvent: _originalEvent\\n        }) === false) {\\n          return this;\\n        }\\n\\n        if (_originalEvent) {\\n          var pointers = this.pointers;\\n\\n          var offset = getOffset(this.cropper);\\n          var center = pointers && Object.keys(pointers).length ? getPointersCenter(pointers) : {\\n            pageX: _originalEvent.pageX,\\n            pageY: _originalEvent.pageY\\n          };\\n\\n          // Zoom from the triggering point of the event\\n          canvasData.left -= (newWidth - width) * ((center.pageX - offset.left - canvasData.left) / width);\\n          canvasData.top -= (newHeight - height) * ((center.pageY - offset.top - canvasData.top) / height);\\n        } else if (isPlainObject(pivot) && isNumber(pivot.x) && isNumber(pivot.y)) {\\n          canvasData.left -= (newWidth - width) * ((pivot.x - canvasData.left) / width);\\n          canvasData.top -= (newHeight - height) * ((pivot.y - canvasData.top) / height);\\n        } else {\\n          // Zoom from the center of the canvas\\n          canvasData.left -= (newWidth - width) / 2;\\n          canvasData.top -= (newHeight - height) / 2;\\n        }\\n\\n        canvasData.width = newWidth;\\n        canvasData.height = newHeight;\\n        this.renderCanvas(true);\\n      }\\n\\n      return this;\\n    },\\n\\n\\n    /**\\n     * Rotate the canvas with a relative degree\\n     * @param {number} degree - The rotate degree.\\n     * @returns {Cropper} this\\n     */\\n    rotate: function rotate(degree) {\\n      return this.rotateTo((this.imageData.rotate || 0) + Number(degree));\\n    },\\n\\n\\n    /**\\n     * Rotate the canvas to an absolute degree\\n     * @param {number} degree - The rotate degree.\\n     * @returns {Cropper} this\\n     */\\n    rotateTo: function rotateTo(degree) {\\n      degree = Number(degree);\\n\\n      if (isNumber(degree) && this.ready && !this.disabled && this.options.rotatable) {\\n        this.imageData.rotate = degree % 360;\\n        this.renderCanvas(true, true);\\n      }\\n\\n      return this;\\n    },\\n\\n\\n    /**\\n     * Scale the image on the x-axis.\\n     * @param {number} scaleX - The scale ratio on the x-axis.\\n     * @returns {Cropper} this\\n     */\\n    scaleX: function scaleX(_scaleX) {\\n      var scaleY = this.imageData.scaleY;\\n\\n\\n      return this.scale(_scaleX, isNumber(scaleY) ? scaleY : 1);\\n    },\\n\\n\\n    /**\\n     * Scale the image on the y-axis.\\n     * @param {number} scaleY - The scale ratio on the y-axis.\\n     * @returns {Cropper} this\\n     */\\n    scaleY: function scaleY(_scaleY) {\\n      var scaleX = this.imageData.scaleX;\\n\\n\\n      return this.scale(isNumber(scaleX) ? scaleX : 1, _scaleY);\\n    },\\n\\n\\n    /**\\n     * Scale the image\\n     * @param {number} scaleX - The scale ratio on the x-axis.\\n     * @param {number} [scaleY=scaleX] - The scale ratio on the y-axis.\\n     * @returns {Cropper} this\\n     */\\n    scale: function scale(scaleX) {\\n      var scaleY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : scaleX;\\n      var imageData = this.imageData;\\n\\n      var transformed = false;\\n\\n      scaleX = Number(scaleX);\\n      scaleY = Number(scaleY);\\n\\n      if (this.ready && !this.disabled && this.options.scalable) {\\n        if (isNumber(scaleX)) {\\n          imageData.scaleX = scaleX;\\n          transformed = true;\\n        }\\n\\n        if (isNumber(scaleY)) {\\n          imageData.scaleY = scaleY;\\n          transformed = true;\\n        }\\n\\n        if (transformed) {\\n          this.renderCanvas(true, true);\\n        }\\n      }\\n\\n      return this;\\n    },\\n\\n\\n    /**\\n     * Get the cropped area position and size data (base on the original image)\\n     * @param {boolean} [rounded=false] - Indicate if round the data values or not.\\n     * @returns {Object} The result cropped data.\\n     */\\n    getData: function getData$$1() {\\n      var rounded = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\\n      var options = this.options,\\n          imageData = this.imageData,\\n          canvasData = this.canvasData,\\n          cropBoxData = this.cropBoxData;\\n\\n      var data = void 0;\\n\\n      if (this.ready && this.cropped) {\\n        data = {\\n          x: cropBoxData.left - canvasData.left,\\n          y: cropBoxData.top - canvasData.top,\\n          width: cropBoxData.width,\\n          height: cropBoxData.height\\n        };\\n\\n        var ratio = imageData.width / imageData.naturalWidth;\\n\\n        forEach(data, function (n, i) {\\n          data[i] = n / ratio;\\n        });\\n\\n        if (rounded) {\\n          // In case rounding off leads to extra 1px in right or bottom border\\n          // we should round the top-left corner and the dimension (#343).\\n          var bottom = Math.round(data.y + data.height);\\n          var right = Math.round(data.x + data.width);\\n\\n          data.x = Math.round(data.x);\\n          data.y = Math.round(data.y);\\n          data.width = right - data.x;\\n          data.height = bottom - data.y;\\n        }\\n      } else {\\n        data = {\\n          x: 0,\\n          y: 0,\\n          width: 0,\\n          height: 0\\n        };\\n      }\\n\\n      if (options.rotatable) {\\n        data.rotate = imageData.rotate || 0;\\n      }\\n\\n      if (options.scalable) {\\n        data.scaleX = imageData.scaleX || 1;\\n        data.scaleY = imageData.scaleY || 1;\\n      }\\n\\n      return data;\\n    },\\n\\n\\n    /**\\n     * Set the cropped area position and size with new data\\n     * @param {Object} data - The new data.\\n     * @returns {Cropper} this\\n     */\\n    setData: function setData$$1(data) {\\n      var options = this.options,\\n          imageData = this.imageData,\\n          canvasData = this.canvasData;\\n\\n      var cropBoxData = {};\\n\\n      if (this.ready && !this.disabled && isPlainObject(data)) {\\n        var transformed = false;\\n\\n        if (options.rotatable) {\\n          if (isNumber(data.rotate) && data.rotate !== imageData.rotate) {\\n            imageData.rotate = data.rotate;\\n            transformed = true;\\n          }\\n        }\\n\\n        if (options.scalable) {\\n          if (isNumber(data.scaleX) && data.scaleX !== imageData.scaleX) {\\n            imageData.scaleX = data.scaleX;\\n            transformed = true;\\n          }\\n\\n          if (isNumber(data.scaleY) && data.scaleY !== imageData.scaleY) {\\n            imageData.scaleY = data.scaleY;\\n            transformed = true;\\n          }\\n        }\\n\\n        if (transformed) {\\n          this.renderCanvas(true, true);\\n        }\\n\\n        var ratio = imageData.width / imageData.naturalWidth;\\n\\n        if (isNumber(data.x)) {\\n          cropBoxData.left = data.x * ratio + canvasData.left;\\n        }\\n\\n        if (isNumber(data.y)) {\\n          cropBoxData.top = data.y * ratio + canvasData.top;\\n        }\\n\\n        if (isNumber(data.width)) {\\n          cropBoxData.width = data.width * ratio;\\n        }\\n\\n        if (isNumber(data.height)) {\\n          cropBoxData.height = data.height * ratio;\\n        }\\n\\n        this.setCropBoxData(cropBoxData);\\n      }\\n\\n      return this;\\n    },\\n\\n\\n    /**\\n     * Get the container size data.\\n     * @returns {Object} The result container data.\\n     */\\n    getContainerData: function getContainerData() {\\n      return this.ready ? assign({}, this.containerData) : {};\\n    },\\n\\n\\n    /**\\n     * Get the image position and size data.\\n     * @returns {Object} The result image data.\\n     */\\n    getImageData: function getImageData() {\\n      return this.sized ? assign({}, this.imageData) : {};\\n    },\\n\\n\\n    /**\\n     * Get the canvas position and size data.\\n     * @returns {Object} The result canvas data.\\n     */\\n    getCanvasData: function getCanvasData() {\\n      var canvasData = this.canvasData;\\n\\n      var data = {};\\n\\n      if (this.ready) {\\n        forEach(['left', 'top', 'width', 'height', 'naturalWidth', 'naturalHeight'], function (n) {\\n          data[n] = canvasData[n];\\n        });\\n      }\\n\\n      return data;\\n    },\\n\\n\\n    /**\\n     * Set the canvas position and size with new data.\\n     * @param {Object} data - The new canvas data.\\n     * @returns {Cropper} this\\n     */\\n    setCanvasData: function setCanvasData(data) {\\n      var canvasData = this.canvasData;\\n      var aspectRatio = canvasData.aspectRatio;\\n\\n\\n      if (this.ready && !this.disabled && isPlainObject(data)) {\\n        if (isNumber(data.left)) {\\n          canvasData.left = data.left;\\n        }\\n\\n        if (isNumber(data.top)) {\\n          canvasData.top = data.top;\\n        }\\n\\n        if (isNumber(data.width)) {\\n          canvasData.width = data.width;\\n          canvasData.height = data.width / aspectRatio;\\n        } else if (isNumber(data.height)) {\\n          canvasData.height = data.height;\\n          canvasData.width = data.height * aspectRatio;\\n        }\\n\\n        this.renderCanvas(true);\\n      }\\n\\n      return this;\\n    },\\n\\n\\n    /**\\n     * Get the crop box position and size data.\\n     * @returns {Object} The result crop box data.\\n     */\\n    getCropBoxData: function getCropBoxData() {\\n      var cropBoxData = this.cropBoxData;\\n\\n      var data = void 0;\\n\\n      if (this.ready && this.cropped) {\\n        data = {\\n          left: cropBoxData.left,\\n          top: cropBoxData.top,\\n          width: cropBoxData.width,\\n          height: cropBoxData.height\\n        };\\n      }\\n\\n      return data || {};\\n    },\\n\\n\\n    /**\\n     * Set the crop box position and size with new data.\\n     * @param {Object} data - The new crop box data.\\n     * @returns {Cropper} this\\n     */\\n    setCropBoxData: function setCropBoxData(data) {\\n      var cropBoxData = this.cropBoxData;\\n      var aspectRatio = this.options.aspectRatio;\\n\\n      var widthChanged = void 0;\\n      var heightChanged = void 0;\\n\\n      if (this.ready && this.cropped && !this.disabled && isPlainObject(data)) {\\n        if (isNumber(data.left)) {\\n          cropBoxData.left = data.left;\\n        }\\n\\n        if (isNumber(data.top)) {\\n          cropBoxData.top = data.top;\\n        }\\n\\n        if (isNumber(data.width) && data.width !== cropBoxData.width) {\\n          widthChanged = true;\\n          cropBoxData.width = data.width;\\n        }\\n\\n        if (isNumber(data.height) && data.height !== cropBoxData.height) {\\n          heightChanged = true;\\n          cropBoxData.height = data.height;\\n        }\\n\\n        if (aspectRatio) {\\n          if (widthChanged) {\\n            cropBoxData.height = cropBoxData.width / aspectRatio;\\n          } else if (heightChanged) {\\n            cropBoxData.width = cropBoxData.height * aspectRatio;\\n          }\\n        }\\n\\n        this.renderCropBox();\\n      }\\n\\n      return this;\\n    },\\n\\n\\n    /**\\n     * Get a canvas drawn the cropped image.\\n     * @param {Object} [options={}] - The config options.\\n     * @returns {HTMLCanvasElement} - The result canvas.\\n     */\\n    getCroppedCanvas: function getCroppedCanvas() {\\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n\\n      if (!this.ready || !window.HTMLCanvasElement) {\\n        return null;\\n      }\\n\\n      var canvasData = this.canvasData;\\n\\n      var source = getSourceCanvas(this.image, this.imageData, canvasData, options);\\n\\n      // Returns the source canvas if it is not cropped.\\n      if (!this.cropped) {\\n        return source;\\n      }\\n\\n      var _getData = this.getData(),\\n          initialX = _getData.x,\\n          initialY = _getData.y,\\n          initialWidth = _getData.width,\\n          initialHeight = _getData.height;\\n\\n      var ratio = source.width / Math.floor(canvasData.naturalWidth);\\n\\n      if (ratio !== 1) {\\n        initialX *= ratio;\\n        initialY *= ratio;\\n        initialWidth *= ratio;\\n        initialHeight *= ratio;\\n      }\\n\\n      var aspectRatio = initialWidth / initialHeight;\\n      var maxSizes = getAdjustedSizes({\\n        aspectRatio: aspectRatio,\\n        width: options.maxWidth || Infinity,\\n        height: options.maxHeight || Infinity\\n      });\\n      var minSizes = getAdjustedSizes({\\n        aspectRatio: aspectRatio,\\n        width: options.minWidth || 0,\\n        height: options.minHeight || 0\\n      }, 'cover');\\n\\n      var _getAdjustedSizes = getAdjustedSizes({\\n        aspectRatio: aspectRatio,\\n        width: options.width || (ratio !== 1 ? source.width : initialWidth),\\n        height: options.height || (ratio !== 1 ? source.height : initialHeight)\\n      }),\\n          width = _getAdjustedSizes.width,\\n          height = _getAdjustedSizes.height;\\n\\n      width = Math.min(maxSizes.width, Math.max(minSizes.width, width));\\n      height = Math.min(maxSizes.height, Math.max(minSizes.height, height));\\n\\n      var canvas = document.createElement('canvas');\\n      var context = canvas.getContext('2d');\\n\\n      canvas.width = normalizeDecimalNumber(width);\\n      canvas.height = normalizeDecimalNumber(height);\\n\\n      context.fillStyle = options.fillColor || 'transparent';\\n      context.fillRect(0, 0, width, height);\\n\\n      var _options$imageSmoothi = options.imageSmoothingEnabled,\\n          imageSmoothingEnabled = _options$imageSmoothi === undefined ? true : _options$imageSmoothi,\\n          imageSmoothingQuality = options.imageSmoothingQuality;\\n\\n\\n      context.imageSmoothingEnabled = imageSmoothingEnabled;\\n\\n      if (imageSmoothingQuality) {\\n        context.imageSmoothingQuality = imageSmoothingQuality;\\n      }\\n\\n      // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D.drawImage\\n      var sourceWidth = source.width;\\n      var sourceHeight = source.height;\\n\\n      // Source canvas parameters\\n      var srcX = initialX;\\n      var srcY = initialY;\\n      var srcWidth = void 0;\\n      var srcHeight = void 0;\\n\\n      // Destination canvas parameters\\n      var dstX = void 0;\\n      var dstY = void 0;\\n      var dstWidth = void 0;\\n      var dstHeight = void 0;\\n\\n      if (srcX <= -initialWidth || srcX > sourceWidth) {\\n        srcX = 0;\\n        srcWidth = 0;\\n        dstX = 0;\\n        dstWidth = 0;\\n      } else if (srcX <= 0) {\\n        dstX = -srcX;\\n        srcX = 0;\\n        srcWidth = Math.min(sourceWidth, initialWidth + srcX);\\n        dstWidth = srcWidth;\\n      } else if (srcX <= sourceWidth) {\\n        dstX = 0;\\n        srcWidth = Math.min(initialWidth, sourceWidth - srcX);\\n        dstWidth = srcWidth;\\n      }\\n\\n      if (srcWidth <= 0 || srcY <= -initialHeight || srcY > sourceHeight) {\\n        srcY = 0;\\n        srcHeight = 0;\\n        dstY = 0;\\n        dstHeight = 0;\\n      } else if (srcY <= 0) {\\n        dstY = -srcY;\\n        srcY = 0;\\n        srcHeight = Math.min(sourceHeight, initialHeight + srcY);\\n        dstHeight = srcHeight;\\n      } else if (srcY <= sourceHeight) {\\n        dstY = 0;\\n        srcHeight = Math.min(initialHeight, sourceHeight - srcY);\\n        dstHeight = srcHeight;\\n      }\\n\\n      var params = [srcX, srcY, srcWidth, srcHeight];\\n\\n      // Avoid \\\"IndexSizeError\\\"\\n      if (dstWidth > 0 && dstHeight > 0) {\\n        var scale = width / initialWidth;\\n\\n        params.push(dstX * scale, dstY * scale, dstWidth * scale, dstHeight * scale);\\n      }\\n\\n      // All the numerical parameters should be integer for `drawImage`\\n      // https://github.com/fengyuanchen/cropper/issues/476\\n      context.drawImage.apply(context, [source].concat(toConsumableArray(params.map(function (param) {\\n        return Math.floor(normalizeDecimalNumber(param));\\n      }))));\\n\\n      return canvas;\\n    },\\n\\n\\n    /**\\n     * Change the aspect ratio of the crop box.\\n     * @param {number} aspectRatio - The new aspect ratio.\\n     * @returns {Cropper} this\\n     */\\n    setAspectRatio: function setAspectRatio(aspectRatio) {\\n      var options = this.options;\\n\\n\\n      if (!this.disabled && !isUndefined(aspectRatio)) {\\n        // 0 -> NaN\\n        options.aspectRatio = Math.max(0, aspectRatio) || NaN;\\n\\n        if (this.ready) {\\n          this.initCropBox();\\n\\n          if (this.cropped) {\\n            this.renderCropBox();\\n          }\\n        }\\n      }\\n\\n      return this;\\n    },\\n\\n\\n    /**\\n     * Change the drag mode.\\n     * @param {string} mode - The new drag mode.\\n     * @returns {Cropper} this\\n     */\\n    setDragMode: function setDragMode(mode) {\\n      var options = this.options,\\n          dragBox = this.dragBox,\\n          face = this.face;\\n\\n\\n      if (this.ready && !this.disabled) {\\n        var croppable = mode === DRAG_MODE_CROP;\\n        var movable = options.movable && mode === DRAG_MODE_MOVE;\\n\\n        mode = croppable || movable ? mode : DRAG_MODE_NONE;\\n\\n        options.dragMode = mode;\\n        setData(dragBox, DATA_ACTION, mode);\\n        toggleClass(dragBox, CLASS_CROP, croppable);\\n        toggleClass(dragBox, CLASS_MOVE, movable);\\n\\n        if (!options.cropBoxMovable) {\\n          // Sync drag mode to crop box when it is not movable\\n          setData(face, DATA_ACTION, mode);\\n          toggleClass(face, CLASS_CROP, croppable);\\n          toggleClass(face, CLASS_MOVE, movable);\\n        }\\n      }\\n\\n      return this;\\n    }\\n  };\\n\\n  var AnotherCropper = WINDOW.Cropper;\\n\\n  var Cropper = function () {\\n    /**\\n     * Create a new Cropper.\\n     * @param {Element} element - The target element for cropping.\\n     * @param {Object} [options={}] - The configuration options.\\n     */\\n    function Cropper(element) {\\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\\n      classCallCheck(this, Cropper);\\n\\n      if (!element || !REGEXP_TAG_NAME.test(element.tagName)) {\\n        throw new Error('The first argument is required and must be an <img> or <canvas> element.');\\n      }\\n\\n      this.element = element;\\n      this.options = assign({}, DEFAULTS, isPlainObject(options) && options);\\n      this.cropped = false;\\n      this.disabled = false;\\n      this.pointers = {};\\n      this.ready = false;\\n      this.reloading = false;\\n      this.replaced = false;\\n      this.sized = false;\\n      this.sizing = false;\\n      this.init();\\n    }\\n\\n    createClass(Cropper, [{\\n      key: 'init',\\n      value: function init() {\\n        var element = this.element;\\n\\n        var tagName = element.tagName.toLowerCase();\\n        var url = void 0;\\n\\n        if (getData(element, NAMESPACE)) {\\n          return;\\n        }\\n\\n        setData(element, NAMESPACE, this);\\n\\n        if (tagName === 'img') {\\n          this.isImg = true;\\n\\n          // e.g.: \\\"img/picture.jpg\\\"\\n          url = element.getAttribute('src') || '';\\n          this.originalUrl = url;\\n\\n          // Stop when it's a blank image\\n          if (!url) {\\n            return;\\n          }\\n\\n          // e.g.: \\\"http://example.com/img/picture.jpg\\\"\\n          url = element.src;\\n        } else if (tagName === 'canvas' && window.HTMLCanvasElement) {\\n          url = element.toDataURL();\\n        }\\n\\n        this.load(url);\\n      }\\n    }, {\\n      key: 'load',\\n      value: function load(url) {\\n        var _this = this;\\n\\n        if (!url) {\\n          return;\\n        }\\n\\n        this.url = url;\\n        this.imageData = {};\\n\\n        var element = this.element,\\n            options = this.options;\\n\\n\\n        if (!options.rotatable && !options.scalable) {\\n          options.checkOrientation = false;\\n        }\\n\\n        if (!options.checkOrientation || !window.ArrayBuffer) {\\n          this.clone();\\n          return;\\n        }\\n\\n        // XMLHttpRequest disallows to open a Data URL in some browsers like IE11 and Safari\\n        if (REGEXP_DATA_URL.test(url)) {\\n          if (REGEXP_DATA_URL_JPEG.test(url)) {\\n            this.read(dataURLToArrayBuffer(url));\\n          } else {\\n            this.clone();\\n          }\\n\\n          return;\\n        }\\n\\n        var xhr = new XMLHttpRequest();\\n\\n        this.reloading = true;\\n        this.xhr = xhr;\\n\\n        var done = function done() {\\n          _this.reloading = false;\\n          _this.xhr = null;\\n        };\\n\\n        xhr.ontimeout = done;\\n        xhr.onabort = done;\\n        xhr.onerror = function () {\\n          done();\\n          _this.clone();\\n        };\\n\\n        xhr.onload = function () {\\n          done();\\n          _this.read(xhr.response);\\n        };\\n\\n        // Bust cache when there is a \\\"crossOrigin\\\" property\\n        if (options.checkCrossOrigin && isCrossOriginURL(url) && element.crossOrigin) {\\n          url = addTimestamp(url);\\n        }\\n\\n        xhr.open('get', url);\\n        xhr.responseType = 'arraybuffer';\\n        xhr.withCredentials = element.crossOrigin === 'use-credentials';\\n        xhr.send();\\n      }\\n    }, {\\n      key: 'read',\\n      value: function read(arrayBuffer) {\\n        var options = this.options,\\n            imageData = this.imageData;\\n\\n        var orientation = getOrientation(arrayBuffer);\\n        var rotate = 0;\\n        var scaleX = 1;\\n        var scaleY = 1;\\n\\n        if (orientation > 1) {\\n          this.url = arrayBufferToDataURL(arrayBuffer, 'image/jpeg');\\n\\n          var _parseOrientation = parseOrientation(orientation);\\n\\n          rotate = _parseOrientation.rotate;\\n          scaleX = _parseOrientation.scaleX;\\n          scaleY = _parseOrientation.scaleY;\\n        }\\n\\n        if (options.rotatable) {\\n          imageData.rotate = rotate;\\n        }\\n\\n        if (options.scalable) {\\n          imageData.scaleX = scaleX;\\n          imageData.scaleY = scaleY;\\n        }\\n\\n        this.clone();\\n      }\\n    }, {\\n      key: 'clone',\\n      value: function clone() {\\n        var element = this.element,\\n            url = this.url;\\n\\n        var crossOrigin = void 0;\\n        var crossOriginUrl = void 0;\\n\\n        if (this.options.checkCrossOrigin && isCrossOriginURL(url)) {\\n          crossOrigin = element.crossOrigin;\\n\\n\\n          if (crossOrigin) {\\n            crossOriginUrl = url;\\n          } else {\\n            crossOrigin = 'anonymous';\\n\\n            // Bust cache when there is not a \\\"crossOrigin\\\" property\\n            crossOriginUrl = addTimestamp(url);\\n          }\\n        }\\n\\n        this.crossOrigin = crossOrigin;\\n        this.crossOriginUrl = crossOriginUrl;\\n\\n        var image = document.createElement('img');\\n\\n        if (crossOrigin) {\\n          image.crossOrigin = crossOrigin;\\n        }\\n\\n        image.src = crossOriginUrl || url;\\n        this.image = image;\\n        image.onload = this.start.bind(this);\\n        image.onerror = this.stop.bind(this);\\n        addClass(image, CLASS_HIDE);\\n        element.parentNode.insertBefore(image, element.nextSibling);\\n      }\\n    }, {\\n      key: 'start',\\n      value: function start() {\\n        var _this2 = this;\\n\\n        var image = this.isImg ? this.element : this.image;\\n\\n        image.onload = null;\\n        image.onerror = null;\\n        this.sizing = true;\\n\\n        var IS_SAFARI = WINDOW.navigator && /(Macintosh|iPhone|iPod|iPad).*AppleWebKit/i.test(WINDOW.navigator.userAgent);\\n        var done = function done(naturalWidth, naturalHeight) {\\n          assign(_this2.imageData, {\\n            naturalWidth: naturalWidth,\\n            naturalHeight: naturalHeight,\\n            aspectRatio: naturalWidth / naturalHeight\\n          });\\n          _this2.sizing = false;\\n          _this2.sized = true;\\n          _this2.build();\\n        };\\n\\n        // Modern browsers (except Safari)\\n        if (image.naturalWidth && !IS_SAFARI) {\\n          done(image.naturalWidth, image.naturalHeight);\\n          return;\\n        }\\n\\n        var sizingImage = document.createElement('img');\\n        var body = document.body || document.documentElement;\\n\\n        this.sizingImage = sizingImage;\\n\\n        sizingImage.onload = function () {\\n          done(sizingImage.width, sizingImage.height);\\n\\n          if (!IS_SAFARI) {\\n            body.removeChild(sizingImage);\\n          }\\n        };\\n\\n        sizingImage.src = image.src;\\n\\n        // iOS Safari will convert the image automatically\\n        // with its orientation once append it into DOM (#279)\\n        if (!IS_SAFARI) {\\n          sizingImage.style.cssText = 'left:0;' + 'max-height:none!important;' + 'max-width:none!important;' + 'min-height:0!important;' + 'min-width:0!important;' + 'opacity:0;' + 'position:absolute;' + 'top:0;' + 'z-index:-1;';\\n          body.appendChild(sizingImage);\\n        }\\n      }\\n    }, {\\n      key: 'stop',\\n      value: function stop() {\\n        var image = this.image;\\n\\n\\n        image.onload = null;\\n        image.onerror = null;\\n        image.parentNode.removeChild(image);\\n        this.image = null;\\n      }\\n    }, {\\n      key: 'build',\\n      value: function build() {\\n        if (!this.sized || this.ready) {\\n          return;\\n        }\\n\\n        var element = this.element,\\n            options = this.options,\\n            image = this.image;\\n\\n        // Create cropper elements\\n\\n        var container = element.parentNode;\\n        var template = document.createElement('div');\\n\\n        template.innerHTML = TEMPLATE;\\n\\n        var cropper = template.querySelector('.' + NAMESPACE + '-container');\\n        var canvas = cropper.querySelector('.' + NAMESPACE + '-canvas');\\n        var dragBox = cropper.querySelector('.' + NAMESPACE + '-drag-box');\\n        var cropBox = cropper.querySelector('.' + NAMESPACE + '-crop-box');\\n        var face = cropBox.querySelector('.' + NAMESPACE + '-face');\\n\\n        this.container = container;\\n        this.cropper = cropper;\\n        this.canvas = canvas;\\n        this.dragBox = dragBox;\\n        this.cropBox = cropBox;\\n        this.viewBox = cropper.querySelector('.' + NAMESPACE + '-view-box');\\n        this.face = face;\\n\\n        canvas.appendChild(image);\\n\\n        // Hide the original image\\n        addClass(element, CLASS_HIDDEN);\\n\\n        // Inserts the cropper after to the current image\\n        container.insertBefore(cropper, element.nextSibling);\\n\\n        // Show the image if is hidden\\n        if (!this.isImg) {\\n          removeClass(image, CLASS_HIDE);\\n        }\\n\\n        this.initPreview();\\n        this.bind();\\n\\n        options.initialAspectRatio = Math.max(0, options.initialAspectRatio) || NaN;\\n        options.aspectRatio = Math.max(0, options.aspectRatio) || NaN;\\n        options.viewMode = Math.max(0, Math.min(3, Math.round(options.viewMode))) || 0;\\n\\n        addClass(cropBox, CLASS_HIDDEN);\\n\\n        if (!options.guides) {\\n          addClass(cropBox.getElementsByClassName(NAMESPACE + '-dashed'), CLASS_HIDDEN);\\n        }\\n\\n        if (!options.center) {\\n          addClass(cropBox.getElementsByClassName(NAMESPACE + '-center'), CLASS_HIDDEN);\\n        }\\n\\n        if (options.background) {\\n          addClass(cropper, NAMESPACE + '-bg');\\n        }\\n\\n        if (!options.highlight) {\\n          addClass(face, CLASS_INVISIBLE);\\n        }\\n\\n        if (options.cropBoxMovable) {\\n          addClass(face, CLASS_MOVE);\\n          setData(face, DATA_ACTION, ACTION_ALL);\\n        }\\n\\n        if (!options.cropBoxResizable) {\\n          addClass(cropBox.getElementsByClassName(NAMESPACE + '-line'), CLASS_HIDDEN);\\n          addClass(cropBox.getElementsByClassName(NAMESPACE + '-point'), CLASS_HIDDEN);\\n        }\\n\\n        this.render();\\n        this.ready = true;\\n        this.setDragMode(options.dragMode);\\n\\n        if (options.autoCrop) {\\n          this.crop();\\n        }\\n\\n        this.setData(options.data);\\n\\n        if (isFunction(options.ready)) {\\n          addListener(element, EVENT_READY, options.ready, {\\n            once: true\\n          });\\n        }\\n\\n        dispatchEvent(element, EVENT_READY);\\n      }\\n    }, {\\n      key: 'unbuild',\\n      value: function unbuild() {\\n        if (!this.ready) {\\n          return;\\n        }\\n\\n        this.ready = false;\\n        this.unbind();\\n        this.resetPreview();\\n        this.cropper.parentNode.removeChild(this.cropper);\\n        removeClass(this.element, CLASS_HIDDEN);\\n      }\\n    }, {\\n      key: 'uncreate',\\n      value: function uncreate() {\\n        if (this.ready) {\\n          this.unbuild();\\n          this.ready = false;\\n          this.cropped = false;\\n        } else if (this.sizing) {\\n          this.sizingImage.onload = null;\\n          this.sizing = false;\\n          this.sized = false;\\n        } else if (this.reloading) {\\n          this.xhr.abort();\\n        } else if (this.image) {\\n          this.stop();\\n        }\\n      }\\n\\n      /**\\n       * Get the no conflict cropper class.\\n       * @returns {Cropper} The cropper class.\\n       */\\n\\n    }], [{\\n      key: 'noConflict',\\n      value: function noConflict() {\\n        window.Cropper = AnotherCropper;\\n        return Cropper;\\n      }\\n\\n      /**\\n       * Change the default options.\\n       * @param {Object} options - The new default options.\\n       */\\n\\n    }, {\\n      key: 'setDefaults',\\n      value: function setDefaults(options) {\\n        assign(DEFAULTS, isPlainObject(options) && options);\\n      }\\n    }]);\\n    return Cropper;\\n  }();\\n\\n  assign(Cropper.prototype, render, preview, events, handlers, change, methods);\\n\\n  return Cropper;\\n\\n})));\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{229:function(t,e,i){\n/*!\n * Cropper.js v1.4.0\n * https://fengyuanchen.github.io/cropperjs\n *\n * Copyright 2015-present Chen Fengyuan\n * Released under the MIT license\n *\n * Date: 2018-06-01T15:18:18.692Z\n */\nt.exports=function(){\"use strict\";var t=\"undefined\"!=typeof window,e=t?window:{},i=\"cropper-hidden\",a=e.PointerEvent?\"pointerdown\":\"touchstart mousedown\",n=e.PointerEvent?\"pointermove\":\"touchmove mousemove\",o=e.PointerEvent?\"pointerup pointercancel\":\"touchend touchcancel mouseup\",r=/^(?:e|w|s|n|se|sw|ne|nw|all|crop|move|zoom)$/,h=/^data:/,s=/^data:image\\/jpeg;base64,/,c=/^(?:img|canvas)$/i,d={viewMode:0,dragMode:\"crop\",initialAspectRatio:NaN,aspectRatio:NaN,data:null,preview:\"\",responsive:!0,restore:!0,checkCrossOrigin:!0,checkOrientation:!0,modal:!0,guides:!0,center:!0,highlight:!0,background:!0,autoCrop:!0,autoCropArea:.8,movable:!0,rotatable:!0,scalable:!0,zoomable:!0,zoomOnTouch:!0,zoomOnWheel:!0,wheelZoomRatio:.1,cropBoxMovable:!0,cropBoxResizable:!0,toggleDragModeOnDblclick:!0,minCanvasWidth:0,minCanvasHeight:0,minCropBoxWidth:0,minCropBoxHeight:0,minContainerWidth:200,minContainerHeight:100,ready:null,cropstart:null,cropmove:null,cropend:null,crop:null,zoom:null},p=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},l=function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")},m=function(){function t(t,e){for(var i=0;i<e.length;i++){var a=e[i];a.enumerable=a.enumerable||!1,a.configurable=!0,\"value\"in a&&(a.writable=!0),Object.defineProperty(t,a.key,a)}}return function(e,i,a){return i&&t(e.prototype,i),a&&t(e,a),e}}(),u=function(t){if(Array.isArray(t)){for(var e=0,i=Array(t.length);e<t.length;e++)i[e]=t[e];return i}return Array.from(t)},g=Number.isNaN||e.isNaN;function f(t){return\"number\"==typeof t&&!g(t)}function v(t){return void 0===t}function w(t){return\"object\"===(void 0===t?\"undefined\":p(t))&&null!==t}var b=Object.prototype.hasOwnProperty;function x(t){if(!w(t))return!1;try{var e=t.constructor,i=e.prototype;return e&&i&&b.call(i,\"isPrototypeOf\")}catch(t){return!1}}function y(t){return\"function\"==typeof t}function M(t,e){if(t&&y(e))if(Array.isArray(t)||f(t.length)){var i=t.length,a=void 0;for(a=0;a<i&&!1!==e.call(t,t[a],a,t);a+=1);}else w(t)&&Object.keys(t).forEach(function(i){e.call(t,t[i],i,t)});return t}var C=Object.assign||function(t){for(var e=arguments.length,i=Array(e>1?e-1:0),a=1;a<e;a++)i[a-1]=arguments[a];return w(t)&&i.length>0&&i.forEach(function(e){w(e)&&Object.keys(e).forEach(function(i){t[i]=e[i]})}),t},D=/\\.\\d*(?:0|9){12}\\d*$/i;function B(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1e11;return D.test(t)?Math.round(t*e)/e:t}var k=/^(?:width|height|left|top|marginLeft|marginTop)$/;function T(t,e){var i=t.style;M(e,function(t,e){k.test(e)&&f(t)&&(t+=\"px\"),i[e]=t})}function W(t,e){if(e)if(f(t.length))M(t,function(t){W(t,e)});else if(t.classList)t.classList.add(e);else{var i=t.className.trim();i?i.indexOf(e)<0&&(t.className=i+\" \"+e):t.className=e}}function N(t,e){e&&(f(t.length)?M(t,function(t){N(t,e)}):t.classList?t.classList.remove(e):t.className.indexOf(e)>=0&&(t.className=t.className.replace(e,\"\")))}function E(t,e,i){e&&(f(t.length)?M(t,function(t){E(t,e,i)}):i?W(t,e):N(t,e))}var H=/([a-z\\d])([A-Z])/g;function z(t){return t.replace(H,\"$1-$2\").toLowerCase()}function L(t,e){return w(t[e])?t[e]:t.dataset?t.dataset[e]:t.getAttribute(\"data-\"+z(e))}function O(t,e,i){w(i)?t[e]=i:t.dataset?t.dataset[e]=i:t.setAttribute(\"data-\"+z(e),i)}function Y(t,e){if(w(t[e]))try{delete t[e]}catch(i){t[e]=void 0}else if(t.dataset)try{delete t.dataset[e]}catch(i){t.dataset[e]=void 0}else t.removeAttribute(\"data-\"+z(e))}var X=/\\s\\s*/,R=function(){var i=!1;if(t){var a=!1,n=function(){},o=Object.defineProperty({},\"once\",{get:function(){return i=!0,a},set:function(t){a=t}});e.addEventListener(\"test\",n,o),e.removeEventListener(\"test\",n,o)}return i}();function A(t,e,i){var a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},n=i;e.trim().split(X).forEach(function(e){if(!R){var o=t.listeners;o&&o[e]&&o[e][i]&&(n=o[e][i],delete o[e][i],0===Object.keys(o[e]).length&&delete o[e],0===Object.keys(o).length&&delete t.listeners)}t.removeEventListener(e,n,a)})}function S(t,e,i){var a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},n=i;e.trim().split(X).forEach(function(e){if(a.once&&!R){var o=t.listeners,r=void 0===o?{}:o;n=function(){for(var o=arguments.length,h=Array(o),s=0;s<o;s++)h[s]=arguments[s];delete r[e][i],t.removeEventListener(e,n,a),i.apply(t,h)},r[e]||(r[e]={}),r[e][i]&&t.removeEventListener(e,r[e][i],a),r[e][i]=n,t.listeners=r}t.addEventListener(e,n,a)})}function I(t,e,i){var a=void 0;return y(Event)&&y(CustomEvent)?a=new CustomEvent(e,{detail:i,bubbles:!0,cancelable:!0}):(a=document.createEvent(\"CustomEvent\")).initCustomEvent(e,!0,!0,i),t.dispatchEvent(a)}function P(t){var e=t.getBoundingClientRect();return{left:e.left+(window.pageXOffset-document.documentElement.clientLeft),top:e.top+(window.pageYOffset-document.documentElement.clientTop)}}var U=e.location,j=/^(https?:)\\/\\/([^:/?#]+):?(\\d*)/i;function q(t){var e=t.match(j);return e&&(e[1]!==U.protocol||e[2]!==U.hostname||e[3]!==U.port)}function $(t){var e=\"timestamp=\"+(new Date).getTime();return t+(-1===t.indexOf(\"?\")?\"?\":\"&\")+e}function Q(t){var e=t.rotate,i=t.scaleX,a=t.scaleY,n=t.translateX,o=t.translateY,r=[];f(n)&&0!==n&&r.push(\"translateX(\"+n+\"px)\"),f(o)&&0!==o&&r.push(\"translateY(\"+o+\"px)\"),f(e)&&0!==e&&r.push(\"rotate(\"+e+\"deg)\"),f(i)&&1!==i&&r.push(\"scaleX(\"+i+\")\"),f(a)&&1!==a&&r.push(\"scaleY(\"+a+\")\");var h=r.length?r.join(\" \"):\"none\";return{WebkitTransform:h,msTransform:h,transform:h}}function Z(t,e){var i=t.pageX,a=t.pageY,n={endX:i,endY:a};return e?n:C({startX:i,startY:a},n)}var F=Number.isFinite||e.isFinite;function J(t){var e=t.aspectRatio,i=t.height,a=t.width,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"contain\",o=function(t){return F(t)&&t>0};if(o(a)&&o(i)){var r=i*e;\"contain\"===n&&r>a||\"cover\"===n&&r<a?i=a/e:a=i*e}else o(a)?i=a/e:o(i)&&(a=i*e);return{width:a,height:i}}var K=String.fromCharCode,V=/^data:.*,/;function G(t){var e=new DataView(t),i=void 0,a=void 0,n=void 0,o=void 0;if(255===e.getUint8(0)&&216===e.getUint8(1))for(var r=e.byteLength,h=2;h<r;){if(255===e.getUint8(h)&&225===e.getUint8(h+1)){n=h;break}h+=1}if(n){var s=n+4,c=n+10;if(\"Exif\"===function(t,e,i){var a=\"\",n=void 0;for(i+=e,n=e;n<i;n+=1)a+=K(t.getUint8(n));return a}(e,s,4)){var d=e.getUint16(c);if(((a=18761===d)||19789===d)&&42===e.getUint16(c+2,a)){var p=e.getUint32(c+4,a);p>=8&&(o=c+p)}}}if(o){var l=e.getUint16(o,a),m=void 0,u=void 0;for(u=0;u<l;u+=1)if(m=o+12*u+2,274===e.getUint16(m,a)){m+=8,i=e.getUint16(m,a),e.setUint16(m,1,a);break}}return i}var _={render:function(){this.initContainer(),this.initCanvas(),this.initCropBox(),this.renderCanvas(),this.cropped&&this.renderCropBox()},initContainer:function(){var t=this.element,e=this.options,a=this.container,n=this.cropper;W(n,i),N(t,i);var o={width:Math.max(a.offsetWidth,Number(e.minContainerWidth)||200),height:Math.max(a.offsetHeight,Number(e.minContainerHeight)||100)};this.containerData=o,T(n,{width:o.width,height:o.height}),W(t,i),N(n,i)},initCanvas:function(){var t=this.containerData,e=this.imageData,i=this.options.viewMode,a=Math.abs(e.rotate)%180==90,n=a?e.naturalHeight:e.naturalWidth,o=a?e.naturalWidth:e.naturalHeight,r=n/o,h=t.width,s=t.height;t.height*r>t.width?3===i?h=t.height*r:s=t.width/r:3===i?s=t.width/r:h=t.height*r;var c={aspectRatio:r,naturalWidth:n,naturalHeight:o,width:h,height:s};c.left=(t.width-h)/2,c.top=(t.height-s)/2,c.oldLeft=c.left,c.oldTop=c.top,this.canvasData=c,this.limited=1===i||2===i,this.limitCanvas(!0,!0),this.initialImageData=C({},e),this.initialCanvasData=C({},c)},limitCanvas:function(t,e){var i=this.options,a=this.containerData,n=this.canvasData,o=this.cropBoxData,r=i.viewMode,h=n.aspectRatio,s=this.cropped&&o;if(t){var c=Number(i.minCanvasWidth)||0,d=Number(i.minCanvasHeight)||0;r>1?(c=Math.max(c,a.width),d=Math.max(d,a.height),3===r&&(d*h>c?c=d*h:d=c/h)):r>0&&(c?c=Math.max(c,s?o.width:0):d?d=Math.max(d,s?o.height:0):s&&(c=o.width,(d=o.height)*h>c?c=d*h:d=c/h));var p=J({aspectRatio:h,width:c,height:d});c=p.width,d=p.height,n.minWidth=c,n.minHeight=d,n.maxWidth=1/0,n.maxHeight=1/0}if(e)if(r){var l=a.width-n.width,m=a.height-n.height;n.minLeft=Math.min(0,l),n.minTop=Math.min(0,m),n.maxLeft=Math.max(0,l),n.maxTop=Math.max(0,m),s&&this.limited&&(n.minLeft=Math.min(o.left,o.left+(o.width-n.width)),n.minTop=Math.min(o.top,o.top+(o.height-n.height)),n.maxLeft=o.left,n.maxTop=o.top,2===r&&(n.width>=a.width&&(n.minLeft=Math.min(0,l),n.maxLeft=Math.max(0,l)),n.height>=a.height&&(n.minTop=Math.min(0,m),n.maxTop=Math.max(0,m))))}else n.minLeft=-n.width,n.minTop=-n.height,n.maxLeft=a.width,n.maxTop=a.height},renderCanvas:function(t,e){var i=this.canvasData,a=this.imageData;if(e){var n=function(t){var e=t.width,i=t.height,a=t.degree;if(90==(a=Math.abs(a)%180))return{width:i,height:e};var n=a%90*Math.PI/180,o=Math.sin(n),r=Math.cos(n),h=e*r+i*o,s=e*o+i*r;return a>90?{width:s,height:h}:{width:h,height:s}}({width:a.naturalWidth*Math.abs(a.scaleX||1),height:a.naturalHeight*Math.abs(a.scaleY||1),degree:a.rotate||0}),o=n.width,r=n.height,h=i.width*(o/i.naturalWidth),s=i.height*(r/i.naturalHeight);i.left-=(h-i.width)/2,i.top-=(s-i.height)/2,i.width=h,i.height=s,i.aspectRatio=o/r,i.naturalWidth=o,i.naturalHeight=r,this.limitCanvas(!0,!1)}(i.width>i.maxWidth||i.width<i.minWidth)&&(i.left=i.oldLeft),(i.height>i.maxHeight||i.height<i.minHeight)&&(i.top=i.oldTop),i.width=Math.min(Math.max(i.width,i.minWidth),i.maxWidth),i.height=Math.min(Math.max(i.height,i.minHeight),i.maxHeight),this.limitCanvas(!1,!0),i.left=Math.min(Math.max(i.left,i.minLeft),i.maxLeft),i.top=Math.min(Math.max(i.top,i.minTop),i.maxTop),i.oldLeft=i.left,i.oldTop=i.top,T(this.canvas,C({width:i.width,height:i.height},Q({translateX:i.left,translateY:i.top}))),this.renderImage(t),this.cropped&&this.limited&&this.limitCropBox(!0,!0)},renderImage:function(t){var e=this.canvasData,i=this.imageData,a=i.naturalWidth*(e.width/e.naturalWidth),n=i.naturalHeight*(e.height/e.naturalHeight);C(i,{width:a,height:n,left:(e.width-a)/2,top:(e.height-n)/2}),T(this.image,C({width:i.width,height:i.height},Q(C({translateX:i.left,translateY:i.top},i)))),t&&this.output()},initCropBox:function(){var t=this.options,e=this.canvasData,i=t.aspectRatio||t.initialAspectRatio,a=Number(t.autoCropArea)||.8,n={width:e.width,height:e.height};i&&(e.height*i>e.width?n.height=n.width/i:n.width=n.height*i),this.cropBoxData=n,this.limitCropBox(!0,!0),n.width=Math.min(Math.max(n.width,n.minWidth),n.maxWidth),n.height=Math.min(Math.max(n.height,n.minHeight),n.maxHeight),n.width=Math.max(n.minWidth,n.width*a),n.height=Math.max(n.minHeight,n.height*a),n.left=e.left+(e.width-n.width)/2,n.top=e.top+(e.height-n.height)/2,n.oldLeft=n.left,n.oldTop=n.top,this.initialCropBoxData=C({},n)},limitCropBox:function(t,e){var i=this.options,a=this.containerData,n=this.canvasData,o=this.cropBoxData,r=this.limited,h=i.aspectRatio;if(t){var s=Number(i.minCropBoxWidth)||0,c=Number(i.minCropBoxHeight)||0,d=Math.min(a.width,r?n.width:a.width),p=Math.min(a.height,r?n.height:a.height);s=Math.min(s,a.width),c=Math.min(c,a.height),h&&(s&&c?c*h>s?c=s/h:s=c*h:s?c=s/h:c&&(s=c*h),p*h>d?p=d/h:d=p*h),o.minWidth=Math.min(s,d),o.minHeight=Math.min(c,p),o.maxWidth=d,o.maxHeight=p}e&&(r?(o.minLeft=Math.max(0,n.left),o.minTop=Math.max(0,n.top),o.maxLeft=Math.min(a.width,n.left+n.width)-o.width,o.maxTop=Math.min(a.height,n.top+n.height)-o.height):(o.minLeft=0,o.minTop=0,o.maxLeft=a.width-o.width,o.maxTop=a.height-o.height))},renderCropBox:function(){var t=this.options,e=this.containerData,i=this.cropBoxData;(i.width>i.maxWidth||i.width<i.minWidth)&&(i.left=i.oldLeft),(i.height>i.maxHeight||i.height<i.minHeight)&&(i.top=i.oldTop),i.width=Math.min(Math.max(i.width,i.minWidth),i.maxWidth),i.height=Math.min(Math.max(i.height,i.minHeight),i.maxHeight),this.limitCropBox(!1,!0),i.left=Math.min(Math.max(i.left,i.minLeft),i.maxLeft),i.top=Math.min(Math.max(i.top,i.minTop),i.maxTop),i.oldLeft=i.left,i.oldTop=i.top,t.movable&&t.cropBoxMovable&&O(this.face,\"cropperAction\",i.width>=e.width&&i.height>=e.height?\"move\":\"all\"),T(this.cropBox,C({width:i.width,height:i.height},Q({translateX:i.left,translateY:i.top}))),this.cropped&&this.limited&&this.limitCanvas(!0,!0),this.disabled||this.output()},output:function(){this.preview(),I(this.element,\"crop\",this.getData())}},tt={initPreview:function(){var t=this.crossOrigin,e=this.options.preview,i=t?this.crossOriginUrl:this.url,a=document.createElement(\"img\");if(t&&(a.crossOrigin=t),a.src=i,this.viewBox.appendChild(a),this.viewBoxImage=a,e){var n=e;\"string\"==typeof e?n=this.element.ownerDocument.querySelectorAll(e):e.querySelector&&(n=[e]),this.previews=n,M(n,function(e){var a=document.createElement(\"img\");O(e,\"cropperPreview\",{width:e.offsetWidth,height:e.offsetHeight,html:e.innerHTML}),t&&(a.crossOrigin=t),a.src=i,a.style.cssText='display:block;width:100%;height:auto;min-width:0!important;min-height:0!important;max-width:none!important;max-height:none!important;image-orientation:0deg!important;\"',e.innerHTML=\"\",e.appendChild(a)})}},resetPreview:function(){M(this.previews,function(t){var e=L(t,\"cropperPreview\");T(t,{width:e.width,height:e.height}),t.innerHTML=e.html,Y(t,\"cropperPreview\")})},preview:function(){var t=this.imageData,e=this.canvasData,i=this.cropBoxData,a=i.width,n=i.height,o=t.width,r=t.height,h=i.left-e.left-t.left,s=i.top-e.top-t.top;this.cropped&&!this.disabled&&(T(this.viewBoxImage,C({width:o,height:r},Q(C({translateX:-h,translateY:-s},t)))),M(this.previews,function(e){var i=L(e,\"cropperPreview\"),c=i.width,d=i.height,p=c,l=d,m=1;a&&(l=n*(m=c/a)),n&&l>d&&(p=a*(m=d/n),l=d),T(e,{width:p,height:l}),T(e.getElementsByTagName(\"img\")[0],C({width:o*m,height:r*m},Q(C({translateX:-h*m,translateY:-s*m},t))))}))}},et={bind:function(){var t=this.element,e=this.options,i=this.cropper;y(e.cropstart)&&S(t,\"cropstart\",e.cropstart),y(e.cropmove)&&S(t,\"cropmove\",e.cropmove),y(e.cropend)&&S(t,\"cropend\",e.cropend),y(e.crop)&&S(t,\"crop\",e.crop),y(e.zoom)&&S(t,\"zoom\",e.zoom),S(i,a,this.onCropStart=this.cropStart.bind(this)),e.zoomable&&e.zoomOnWheel&&S(i,\"wheel mousewheel DOMMouseScroll\",this.onWheel=this.wheel.bind(this)),e.toggleDragModeOnDblclick&&S(i,\"dblclick\",this.onDblclick=this.dblclick.bind(this)),S(t.ownerDocument,n,this.onCropMove=this.cropMove.bind(this)),S(t.ownerDocument,o,this.onCropEnd=this.cropEnd.bind(this)),e.responsive&&S(window,\"resize\",this.onResize=this.resize.bind(this))},unbind:function(){var t=this.element,e=this.options,i=this.cropper;y(e.cropstart)&&A(t,\"cropstart\",e.cropstart),y(e.cropmove)&&A(t,\"cropmove\",e.cropmove),y(e.cropend)&&A(t,\"cropend\",e.cropend),y(e.crop)&&A(t,\"crop\",e.crop),y(e.zoom)&&A(t,\"zoom\",e.zoom),A(i,a,this.onCropStart),e.zoomable&&e.zoomOnWheel&&A(i,\"wheel mousewheel DOMMouseScroll\",this.onWheel),e.toggleDragModeOnDblclick&&A(i,\"dblclick\",this.onDblclick),A(t.ownerDocument,n,this.onCropMove),A(t.ownerDocument,o,this.onCropEnd),e.responsive&&A(window,\"resize\",this.onResize)}},it={resize:function(){var t=this.options,e=this.container,i=this.containerData,a=Number(t.minContainerWidth)||200,n=Number(t.minContainerHeight)||100;if(!(this.disabled||i.width<=a||i.height<=n)){var o=e.offsetWidth/i.width;if(1!==o||e.offsetHeight!==i.height){var r=void 0,h=void 0;t.restore&&(r=this.getCanvasData(),h=this.getCropBoxData()),this.render(),t.restore&&(this.setCanvasData(M(r,function(t,e){r[e]=t*o})),this.setCropBoxData(M(h,function(t,e){h[e]=t*o})))}}},dblclick:function(){var t,e;this.disabled||\"none\"===this.options.dragMode||this.setDragMode((t=this.dragBox,e=\"cropper-crop\",(t.classList?t.classList.contains(e):t.className.indexOf(e)>-1)?\"move\":\"crop\"))},wheel:function(t){var e=this,i=Number(this.options.wheelZoomRatio)||.1,a=1;this.disabled||(t.preventDefault(),this.wheeling||(this.wheeling=!0,setTimeout(function(){e.wheeling=!1},50),t.deltaY?a=t.deltaY>0?1:-1:t.wheelDelta?a=-t.wheelDelta/120:t.detail&&(a=t.detail>0?1:-1),this.zoom(-a*i,t)))},cropStart:function(t){if(!this.disabled){var e=this.options,i=this.pointers,a=void 0;t.changedTouches?M(t.changedTouches,function(t){i[t.identifier]=Z(t)}):i[t.pointerId||0]=Z(t),a=Object.keys(i).length>1&&e.zoomable&&e.zoomOnTouch?\"zoom\":L(t.target,\"cropperAction\"),r.test(a)&&!1!==I(this.element,\"cropstart\",{originalEvent:t,action:a})&&(t.preventDefault(),this.action=a,this.cropping=!1,\"crop\"===a&&(this.cropping=!0,W(this.dragBox,\"cropper-modal\")))}},cropMove:function(t){var e=this.action;if(!this.disabled&&e){var i=this.pointers;t.preventDefault(),!1!==I(this.element,\"cropmove\",{originalEvent:t,action:e})&&(t.changedTouches?M(t.changedTouches,function(t){C(i[t.identifier],Z(t,!0))}):C(i[t.pointerId||0],Z(t,!0)),this.change(t))}},cropEnd:function(t){if(!this.disabled){var e=this.action,i=this.pointers;t.changedTouches?M(t.changedTouches,function(t){delete i[t.identifier]}):delete i[t.pointerId||0],e&&(t.preventDefault(),Object.keys(i).length||(this.action=\"\"),this.cropping&&(this.cropping=!1,E(this.dragBox,\"cropper-modal\",this.cropped&&this.options.modal)),I(this.element,\"cropend\",{originalEvent:t,action:e}))}}},at={change:function(t){var e=this.options,a=this.canvasData,n=this.containerData,o=this.cropBoxData,r=this.pointers,h=this.action,s=e.aspectRatio,c=o.left,d=o.top,p=o.width,l=o.height,m=c+p,u=d+l,g=0,f=0,v=n.width,w=n.height,b=!0,x=void 0;!s&&t.shiftKey&&(s=p&&l?p/l:1),this.limited&&(g=o.minLeft,f=o.minTop,v=g+Math.min(n.width,a.width,a.left+a.width),w=f+Math.min(n.height,a.height,a.top+a.height));var y=r[Object.keys(r)[0]],D={x:y.endX-y.startX,y:y.endY-y.startY},B=function(t){switch(t){case\"e\":m+D.x>v&&(D.x=v-m);break;case\"w\":c+D.x<g&&(D.x=g-c);break;case\"n\":d+D.y<f&&(D.y=f-d);break;case\"s\":u+D.y>w&&(D.y=w-u)}};switch(h){case\"all\":c+=D.x,d+=D.y;break;case\"e\":if(D.x>=0&&(m>=v||s&&(d<=f||u>=w))){b=!1;break}B(\"e\"),(p+=D.x)<0&&(h=\"w\",c-=p=-p),s&&(l=p/s,d+=(o.height-l)/2);break;case\"n\":if(D.y<=0&&(d<=f||s&&(c<=g||m>=v))){b=!1;break}B(\"n\"),l-=D.y,d+=D.y,l<0&&(h=\"s\",d-=l=-l),s&&(p=l*s,c+=(o.width-p)/2);break;case\"w\":if(D.x<=0&&(c<=g||s&&(d<=f||u>=w))){b=!1;break}B(\"w\"),p-=D.x,c+=D.x,p<0&&(h=\"e\",c-=p=-p),s&&(l=p/s,d+=(o.height-l)/2);break;case\"s\":if(D.y>=0&&(u>=w||s&&(c<=g||m>=v))){b=!1;break}B(\"s\"),(l+=D.y)<0&&(h=\"n\",d-=l=-l),s&&(p=l*s,c+=(o.width-p)/2);break;case\"ne\":if(s){if(D.y<=0&&(d<=f||m>=v)){b=!1;break}B(\"n\"),l-=D.y,d+=D.y,p=l*s}else B(\"n\"),B(\"e\"),D.x>=0?m<v?p+=D.x:D.y<=0&&d<=f&&(b=!1):p+=D.x,D.y<=0?d>f&&(l-=D.y,d+=D.y):(l-=D.y,d+=D.y);p<0&&l<0?(h=\"sw\",d-=l=-l,c-=p=-p):p<0?(h=\"nw\",c-=p=-p):l<0&&(h=\"se\",d-=l=-l);break;case\"nw\":if(s){if(D.y<=0&&(d<=f||c<=g)){b=!1;break}B(\"n\"),l-=D.y,d+=D.y,p=l*s,c+=o.width-p}else B(\"n\"),B(\"w\"),D.x<=0?c>g?(p-=D.x,c+=D.x):D.y<=0&&d<=f&&(b=!1):(p-=D.x,c+=D.x),D.y<=0?d>f&&(l-=D.y,d+=D.y):(l-=D.y,d+=D.y);p<0&&l<0?(h=\"se\",d-=l=-l,c-=p=-p):p<0?(h=\"ne\",c-=p=-p):l<0&&(h=\"sw\",d-=l=-l);break;case\"sw\":if(s){if(D.x<=0&&(c<=g||u>=w)){b=!1;break}B(\"w\"),p-=D.x,c+=D.x,l=p/s}else B(\"s\"),B(\"w\"),D.x<=0?c>g?(p-=D.x,c+=D.x):D.y>=0&&u>=w&&(b=!1):(p-=D.x,c+=D.x),D.y>=0?u<w&&(l+=D.y):l+=D.y;p<0&&l<0?(h=\"ne\",d-=l=-l,c-=p=-p):p<0?(h=\"se\",c-=p=-p):l<0&&(h=\"nw\",d-=l=-l);break;case\"se\":if(s){if(D.x>=0&&(m>=v||u>=w)){b=!1;break}B(\"e\"),p+=D.x,l=p/s}else B(\"s\"),B(\"e\"),D.x>=0?m<v?p+=D.x:D.y>=0&&u>=w&&(b=!1):p+=D.x,D.y>=0?u<w&&(l+=D.y):l+=D.y;p<0&&l<0?(h=\"nw\",d-=l=-l,c-=p=-p):p<0?(h=\"sw\",c-=p=-p):l<0&&(h=\"ne\",d-=l=-l);break;case\"move\":this.move(D.x,D.y),b=!1;break;case\"zoom\":this.zoom(function(t){var e=C({},t),i=[];return M(t,function(t,a){delete e[a],M(e,function(e){var a=Math.abs(t.startX-e.startX),n=Math.abs(t.startY-e.startY),o=Math.abs(t.endX-e.endX),r=Math.abs(t.endY-e.endY),h=Math.sqrt(a*a+n*n),s=(Math.sqrt(o*o+r*r)-h)/h;i.push(s)})}),i.sort(function(t,e){return Math.abs(t)<Math.abs(e)}),i[0]}(r),t),b=!1;break;case\"crop\":if(!D.x||!D.y){b=!1;break}x=P(this.cropper),c=y.startX-x.left,d=y.startY-x.top,p=o.minWidth,l=o.minHeight,D.x>0?h=D.y>0?\"se\":\"ne\":D.x<0&&(c-=p,h=D.y>0?\"sw\":\"nw\"),D.y<0&&(d-=l),this.cropped||(N(this.cropBox,i),this.cropped=!0,this.limited&&this.limitCropBox(!0,!0))}b&&(o.width=p,o.height=l,o.left=c,o.top=d,this.action=h,this.renderCropBox()),M(r,function(t){t.startX=t.endX,t.startY=t.endY})}},nt={crop:function(){return!this.ready||this.cropped||this.disabled||(this.cropped=!0,this.limitCropBox(!0,!0),this.options.modal&&W(this.dragBox,\"cropper-modal\"),N(this.cropBox,i),this.setCropBoxData(this.initialCropBoxData)),this},reset:function(){return this.ready&&!this.disabled&&(this.imageData=C({},this.initialImageData),this.canvasData=C({},this.initialCanvasData),this.cropBoxData=C({},this.initialCropBoxData),this.renderCanvas(),this.cropped&&this.renderCropBox()),this},clear:function(){return this.cropped&&!this.disabled&&(C(this.cropBoxData,{left:0,top:0,width:0,height:0}),this.cropped=!1,this.renderCropBox(),this.limitCanvas(!0,!0),this.renderCanvas(),N(this.dragBox,\"cropper-modal\"),W(this.cropBox,i)),this},replace:function(t){var e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return!this.disabled&&t&&(this.isImg&&(this.element.src=t),e?(this.url=t,this.image.src=t,this.ready&&(this.viewBoxImage.src=t,M(this.previews,function(e){e.getElementsByTagName(\"img\")[0].src=t}))):(this.isImg&&(this.replaced=!0),this.options.data=null,this.uncreate(),this.load(t))),this},enable:function(){return this.ready&&this.disabled&&(this.disabled=!1,N(this.cropper,\"cropper-disabled\")),this},disable:function(){return this.ready&&!this.disabled&&(this.disabled=!0,W(this.cropper,\"cropper-disabled\")),this},destroy:function(){var t=this.element;return L(t,\"cropper\")?(this.isImg&&this.replaced&&(t.src=this.originalUrl),this.uncreate(),Y(t,\"cropper\"),this):this},move:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:t,i=this.canvasData,a=i.left,n=i.top;return this.moveTo(v(t)?t:a+Number(t),v(e)?e:n+Number(e))},moveTo:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:t,i=this.canvasData,a=!1;return t=Number(t),e=Number(e),this.ready&&!this.disabled&&this.options.movable&&(f(t)&&(i.left=t,a=!0),f(e)&&(i.top=e,a=!0),a&&this.renderCanvas(!0)),this},zoom:function(t,e){var i=this.canvasData;return t=(t=Number(t))<0?1/(1-t):1+t,this.zoomTo(i.width*t/i.naturalWidth,null,e)},zoomTo:function(t,e,i){var a=this.options,n=this.canvasData,o=n.width,r=n.height,h=n.naturalWidth,s=n.naturalHeight;if((t=Number(t))>=0&&this.ready&&!this.disabled&&a.zoomable){var c=h*t,d=s*t;if(!1===I(this.element,\"zoom\",{ratio:t,oldRatio:o/h,originalEvent:i}))return this;if(i){var p=this.pointers,l=P(this.cropper),m=p&&Object.keys(p).length?function(t){var e=0,i=0,a=0;return M(t,function(t){var n=t.startX,o=t.startY;e+=n,i+=o,a+=1}),{pageX:e/=a,pageY:i/=a}}(p):{pageX:i.pageX,pageY:i.pageY};n.left-=(c-o)*((m.pageX-l.left-n.left)/o),n.top-=(d-r)*((m.pageY-l.top-n.top)/r)}else x(e)&&f(e.x)&&f(e.y)?(n.left-=(c-o)*((e.x-n.left)/o),n.top-=(d-r)*((e.y-n.top)/r)):(n.left-=(c-o)/2,n.top-=(d-r)/2);n.width=c,n.height=d,this.renderCanvas(!0)}return this},rotate:function(t){return this.rotateTo((this.imageData.rotate||0)+Number(t))},rotateTo:function(t){return f(t=Number(t))&&this.ready&&!this.disabled&&this.options.rotatable&&(this.imageData.rotate=t%360,this.renderCanvas(!0,!0)),this},scaleX:function(t){var e=this.imageData.scaleY;return this.scale(t,f(e)?e:1)},scaleY:function(t){var e=this.imageData.scaleX;return this.scale(f(e)?e:1,t)},scale:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:t,i=this.imageData,a=!1;return t=Number(t),e=Number(e),this.ready&&!this.disabled&&this.options.scalable&&(f(t)&&(i.scaleX=t,a=!0),f(e)&&(i.scaleY=e,a=!0),a&&this.renderCanvas(!0,!0)),this},getData:function(){var t=arguments.length>0&&void 0!==arguments[0]&&arguments[0],e=this.options,i=this.imageData,a=this.canvasData,n=this.cropBoxData,o=void 0;if(this.ready&&this.cropped){o={x:n.left-a.left,y:n.top-a.top,width:n.width,height:n.height};var r=i.width/i.naturalWidth;if(M(o,function(t,e){o[e]=t/r}),t){var h=Math.round(o.y+o.height),s=Math.round(o.x+o.width);o.x=Math.round(o.x),o.y=Math.round(o.y),o.width=s-o.x,o.height=h-o.y}}else o={x:0,y:0,width:0,height:0};return e.rotatable&&(o.rotate=i.rotate||0),e.scalable&&(o.scaleX=i.scaleX||1,o.scaleY=i.scaleY||1),o},setData:function(t){var e=this.options,i=this.imageData,a=this.canvasData,n={};if(this.ready&&!this.disabled&&x(t)){var o=!1;e.rotatable&&f(t.rotate)&&t.rotate!==i.rotate&&(i.rotate=t.rotate,o=!0),e.scalable&&(f(t.scaleX)&&t.scaleX!==i.scaleX&&(i.scaleX=t.scaleX,o=!0),f(t.scaleY)&&t.scaleY!==i.scaleY&&(i.scaleY=t.scaleY,o=!0)),o&&this.renderCanvas(!0,!0);var r=i.width/i.naturalWidth;f(t.x)&&(n.left=t.x*r+a.left),f(t.y)&&(n.top=t.y*r+a.top),f(t.width)&&(n.width=t.width*r),f(t.height)&&(n.height=t.height*r),this.setCropBoxData(n)}return this},getContainerData:function(){return this.ready?C({},this.containerData):{}},getImageData:function(){return this.sized?C({},this.imageData):{}},getCanvasData:function(){var t=this.canvasData,e={};return this.ready&&M([\"left\",\"top\",\"width\",\"height\",\"naturalWidth\",\"naturalHeight\"],function(i){e[i]=t[i]}),e},setCanvasData:function(t){var e=this.canvasData,i=e.aspectRatio;return this.ready&&!this.disabled&&x(t)&&(f(t.left)&&(e.left=t.left),f(t.top)&&(e.top=t.top),f(t.width)?(e.width=t.width,e.height=t.width/i):f(t.height)&&(e.height=t.height,e.width=t.height*i),this.renderCanvas(!0)),this},getCropBoxData:function(){var t=this.cropBoxData,e=void 0;return this.ready&&this.cropped&&(e={left:t.left,top:t.top,width:t.width,height:t.height}),e||{}},setCropBoxData:function(t){var e=this.cropBoxData,i=this.options.aspectRatio,a=void 0,n=void 0;return this.ready&&this.cropped&&!this.disabled&&x(t)&&(f(t.left)&&(e.left=t.left),f(t.top)&&(e.top=t.top),f(t.width)&&t.width!==e.width&&(a=!0,e.width=t.width),f(t.height)&&t.height!==e.height&&(n=!0,e.height=t.height),i&&(a?e.height=e.width/i:n&&(e.width=e.height*i)),this.renderCropBox()),this},getCroppedCanvas:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(!this.ready||!window.HTMLCanvasElement)return null;var e=this.canvasData,i=function(t,e,i,a){var n=e.aspectRatio,o=e.naturalWidth,r=e.naturalHeight,h=e.rotate,s=void 0===h?0:h,c=e.scaleX,d=void 0===c?1:c,p=e.scaleY,l=void 0===p?1:p,m=i.aspectRatio,g=i.naturalWidth,f=i.naturalHeight,v=a.fillColor,w=void 0===v?\"transparent\":v,b=a.imageSmoothingEnabled,x=void 0===b||b,y=a.imageSmoothingQuality,M=void 0===y?\"low\":y,C=a.maxWidth,D=void 0===C?1/0:C,k=a.maxHeight,T=void 0===k?1/0:k,W=a.minWidth,N=void 0===W?0:W,E=a.minHeight,H=void 0===E?0:E,z=document.createElement(\"canvas\"),L=z.getContext(\"2d\"),O=J({aspectRatio:m,width:D,height:T}),Y=J({aspectRatio:m,width:N,height:H},\"cover\"),X=Math.min(O.width,Math.max(Y.width,g)),R=Math.min(O.height,Math.max(Y.height,f)),A=J({aspectRatio:n,width:D,height:T}),S=J({aspectRatio:n,width:N,height:H},\"cover\"),I=Math.min(A.width,Math.max(S.width,o)),P=Math.min(A.height,Math.max(S.height,r)),U=[-I/2,-P/2,I,P];return z.width=B(X),z.height=B(R),L.fillStyle=w,L.fillRect(0,0,X,R),L.save(),L.translate(X/2,R/2),L.rotate(s*Math.PI/180),L.scale(d,l),L.imageSmoothingEnabled=x,L.imageSmoothingQuality=M,L.drawImage.apply(L,[t].concat(u(U.map(function(t){return Math.floor(B(t))})))),L.restore(),z}(this.image,this.imageData,e,t);if(!this.cropped)return i;var a=this.getData(),n=a.x,o=a.y,r=a.width,h=a.height,s=i.width/Math.floor(e.naturalWidth);1!==s&&(n*=s,o*=s,r*=s,h*=s);var c=r/h,d=J({aspectRatio:c,width:t.maxWidth||1/0,height:t.maxHeight||1/0}),p=J({aspectRatio:c,width:t.minWidth||0,height:t.minHeight||0},\"cover\"),l=J({aspectRatio:c,width:t.width||(1!==s?i.width:r),height:t.height||(1!==s?i.height:h)}),m=l.width,g=l.height;m=Math.min(d.width,Math.max(p.width,m)),g=Math.min(d.height,Math.max(p.height,g));var f=document.createElement(\"canvas\"),v=f.getContext(\"2d\");f.width=B(m),f.height=B(g),v.fillStyle=t.fillColor||\"transparent\",v.fillRect(0,0,m,g);var w=t.imageSmoothingEnabled,b=void 0===w||w,x=t.imageSmoothingQuality;v.imageSmoothingEnabled=b,x&&(v.imageSmoothingQuality=x);var y=i.width,M=i.height,C=n,D=o,k=void 0,T=void 0,W=void 0,N=void 0,E=void 0,H=void 0;C<=-r||C>y?(C=0,k=0,W=0,E=0):C<=0?(W=-C,C=0,k=Math.min(y,r+C),E=k):C<=y&&(W=0,k=Math.min(r,y-C),E=k),k<=0||D<=-h||D>M?(D=0,T=0,N=0,H=0):D<=0?(N=-D,D=0,T=Math.min(M,h+D),H=T):D<=M&&(N=0,T=Math.min(h,M-D),H=T);var z=[C,D,k,T];if(E>0&&H>0){var L=m/r;z.push(W*L,N*L,E*L,H*L)}return v.drawImage.apply(v,[i].concat(u(z.map(function(t){return Math.floor(B(t))})))),f},setAspectRatio:function(t){var e=this.options;return this.disabled||v(t)||(e.aspectRatio=Math.max(0,t)||NaN,this.ready&&(this.initCropBox(),this.cropped&&this.renderCropBox())),this},setDragMode:function(t){var e=this.options,i=this.dragBox,a=this.face;if(this.ready&&!this.disabled){var n=\"crop\"===t,o=e.movable&&\"move\"===t;t=n||o?t:\"none\",e.dragMode=t,O(i,\"cropperAction\",t),E(i,\"cropper-crop\",n),E(i,\"cropper-move\",o),e.cropBoxMovable||(O(a,\"cropperAction\",t),E(a,\"cropper-crop\",n),E(a,\"cropper-move\",o))}return this}},ot=e.Cropper,rt=function(){function t(e){var i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(l(this,t),!e||!c.test(e.tagName))throw new Error(\"The first argument is required and must be an <img> or <canvas> element.\");this.element=e,this.options=C({},d,x(i)&&i),this.cropped=!1,this.disabled=!1,this.pointers={},this.ready=!1,this.reloading=!1,this.replaced=!1,this.sized=!1,this.sizing=!1,this.init()}return m(t,[{key:\"init\",value:function(){var t=this.element,e=t.tagName.toLowerCase(),i=void 0;if(!L(t,\"cropper\")){if(O(t,\"cropper\",this),\"img\"===e){if(this.isImg=!0,i=t.getAttribute(\"src\")||\"\",this.originalUrl=i,!i)return;i=t.src}else\"canvas\"===e&&window.HTMLCanvasElement&&(i=t.toDataURL());this.load(i)}}},{key:\"load\",value:function(t){var e=this;if(t){this.url=t,this.imageData={};var i=this.element,a=this.options;if(a.rotatable||a.scalable||(a.checkOrientation=!1),a.checkOrientation&&window.ArrayBuffer)if(h.test(t))s.test(t)?this.read((n=t.replace(V,\"\"),o=atob(n),r=new ArrayBuffer(o.length),M(c=new Uint8Array(r),function(t,e){c[e]=o.charCodeAt(e)}),r)):this.clone();else{var n,o,r,c,d=new XMLHttpRequest;this.reloading=!0,this.xhr=d;var p=function(){e.reloading=!1,e.xhr=null};d.ontimeout=p,d.onabort=p,d.onerror=function(){p(),e.clone()},d.onload=function(){p(),e.read(d.response)},a.checkCrossOrigin&&q(t)&&i.crossOrigin&&(t=$(t)),d.open(\"get\",t),d.responseType=\"arraybuffer\",d.withCredentials=\"use-credentials\"===i.crossOrigin,d.send()}else this.clone()}}},{key:\"read\",value:function(t){var e=this.options,i=this.imageData,a=G(t),n=0,o=1,r=1;if(a>1){this.url=function(t,e){var i=\"\";return M(new Uint8Array(t),function(t){i+=K(t)}),\"data:\"+e+\";base64,\"+btoa(i)}(t,\"image/jpeg\");var h=function(t){var e=0,i=1,a=1;switch(t){case 2:i=-1;break;case 3:e=-180;break;case 4:a=-1;break;case 5:e=90,a=-1;break;case 6:e=90;break;case 7:e=90,i=-1;break;case 8:e=-90}return{rotate:e,scaleX:i,scaleY:a}}(a);n=h.rotate,o=h.scaleX,r=h.scaleY}e.rotatable&&(i.rotate=n),e.scalable&&(i.scaleX=o,i.scaleY=r),this.clone()}},{key:\"clone\",value:function(){var t=this.element,e=this.url,i=void 0,a=void 0;this.options.checkCrossOrigin&&q(e)&&((i=t.crossOrigin)?a=e:(i=\"anonymous\",a=$(e))),this.crossOrigin=i,this.crossOriginUrl=a;var n=document.createElement(\"img\");i&&(n.crossOrigin=i),n.src=a||e,this.image=n,n.onload=this.start.bind(this),n.onerror=this.stop.bind(this),W(n,\"cropper-hide\"),t.parentNode.insertBefore(n,t.nextSibling)}},{key:\"start\",value:function(){var t=this,i=this.isImg?this.element:this.image;i.onload=null,i.onerror=null,this.sizing=!0;var a=e.navigator&&/(Macintosh|iPhone|iPod|iPad).*AppleWebKit/i.test(e.navigator.userAgent),n=function(e,i){C(t.imageData,{naturalWidth:e,naturalHeight:i,aspectRatio:e/i}),t.sizing=!1,t.sized=!0,t.build()};if(!i.naturalWidth||a){var o=document.createElement(\"img\"),r=document.body||document.documentElement;this.sizingImage=o,o.onload=function(){n(o.width,o.height),a||r.removeChild(o)},o.src=i.src,a||(o.style.cssText=\"left:0;max-height:none!important;max-width:none!important;min-height:0!important;min-width:0!important;opacity:0;position:absolute;top:0;z-index:-1;\",r.appendChild(o))}else n(i.naturalWidth,i.naturalHeight)}},{key:\"stop\",value:function(){var t=this.image;t.onload=null,t.onerror=null,t.parentNode.removeChild(t),this.image=null}},{key:\"build\",value:function(){if(this.sized&&!this.ready){var t=this.element,e=this.options,a=this.image,n=t.parentNode,o=document.createElement(\"div\");o.innerHTML='<div class=\"cropper-container\" touch-action=\"none\"><div class=\"cropper-wrap-box\"><div class=\"cropper-canvas\"></div></div><div class=\"cropper-drag-box\"></div><div class=\"cropper-crop-box\"><span class=\"cropper-view-box\"></span><span class=\"cropper-dashed dashed-h\"></span><span class=\"cropper-dashed dashed-v\"></span><span class=\"cropper-center\"></span><span class=\"cropper-face\"></span><span class=\"cropper-line line-e\" data-cropper-action=\"e\"></span><span class=\"cropper-line line-n\" data-cropper-action=\"n\"></span><span class=\"cropper-line line-w\" data-cropper-action=\"w\"></span><span class=\"cropper-line line-s\" data-cropper-action=\"s\"></span><span class=\"cropper-point point-e\" data-cropper-action=\"e\"></span><span class=\"cropper-point point-n\" data-cropper-action=\"n\"></span><span class=\"cropper-point point-w\" data-cropper-action=\"w\"></span><span class=\"cropper-point point-s\" data-cropper-action=\"s\"></span><span class=\"cropper-point point-ne\" data-cropper-action=\"ne\"></span><span class=\"cropper-point point-nw\" data-cropper-action=\"nw\"></span><span class=\"cropper-point point-sw\" data-cropper-action=\"sw\"></span><span class=\"cropper-point point-se\" data-cropper-action=\"se\"></span></div></div>';var r=o.querySelector(\".cropper-container\"),h=r.querySelector(\".cropper-canvas\"),s=r.querySelector(\".cropper-drag-box\"),c=r.querySelector(\".cropper-crop-box\"),d=c.querySelector(\".cropper-face\");this.container=n,this.cropper=r,this.canvas=h,this.dragBox=s,this.cropBox=c,this.viewBox=r.querySelector(\".cropper-view-box\"),this.face=d,h.appendChild(a),W(t,i),n.insertBefore(r,t.nextSibling),this.isImg||N(a,\"cropper-hide\"),this.initPreview(),this.bind(),e.initialAspectRatio=Math.max(0,e.initialAspectRatio)||NaN,e.aspectRatio=Math.max(0,e.aspectRatio)||NaN,e.viewMode=Math.max(0,Math.min(3,Math.round(e.viewMode)))||0,W(c,i),e.guides||W(c.getElementsByClassName(\"cropper-dashed\"),i),e.center||W(c.getElementsByClassName(\"cropper-center\"),i),e.background&&W(r,\"cropper-bg\"),e.highlight||W(d,\"cropper-invisible\"),e.cropBoxMovable&&(W(d,\"cropper-move\"),O(d,\"cropperAction\",\"all\")),e.cropBoxResizable||(W(c.getElementsByClassName(\"cropper-line\"),i),W(c.getElementsByClassName(\"cropper-point\"),i)),this.render(),this.ready=!0,this.setDragMode(e.dragMode),e.autoCrop&&this.crop(),this.setData(e.data),y(e.ready)&&S(t,\"ready\",e.ready,{once:!0}),I(t,\"ready\")}}},{key:\"unbuild\",value:function(){this.ready&&(this.ready=!1,this.unbind(),this.resetPreview(),this.cropper.parentNode.removeChild(this.cropper),N(this.element,i))}},{key:\"uncreate\",value:function(){this.ready?(this.unbuild(),this.ready=!1,this.cropped=!1):this.sizing?(this.sizingImage.onload=null,this.sizing=!1,this.sized=!1):this.reloading?this.xhr.abort():this.image&&this.stop()}}],[{key:\"noConflict\",value:function(){return window.Cropper=ot,t}},{key:\"setDefaults\",value:function(t){C(d,x(t)&&t)}}]),t}();return C(rt.prototype,_,tt,et,it,at,nt),rt}()}}]);","extractedComments":[]}